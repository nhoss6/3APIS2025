{"result":[{"scriptId":"3","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9844,"endOffset":9917,"count":4}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9923,"endOffset":9974,"count":84}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9980,"endOffset":10027,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11639,"endOffset":11708,"count":1}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":12390,"endOffset":12418,"count":60}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12732,"endOffset":12760,"count":60}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":13198,"endOffset":13254,"count":2}],"isBlockCoverage":false},{"functionName":"SafeWeakRef","ranges":[{"startOffset":13414,"endOffset":13452,"count":2}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":13608,"endOffset":13650,"count":18}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14167,"endOffset":14448,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14315,"endOffset":14442,"count":3}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14346,"endOffset":14395,"count":3}],"isBlockCoverage":false}]},{"scriptId":"6","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":6164,"endOffset":6433,"count":48}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9768,"endOffset":9845,"count":64}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9858,"endOffset":9954,"count":231}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9967,"endOffset":10323,"count":155},{"startOffset":10044,"endOffset":10211,"count":0},{"startOffset":10267,"endOffset":10293,"count":23},{"startOffset":10293,"endOffset":10322,"count":132}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":10596,"endOffset":10707,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10872,"endOffset":11549,"count":29},{"startOffset":10954,"endOffset":11150,"count":0},{"startOffset":11216,"endOffset":11518,"count":9},{"startOffset":11479,"endOffset":11483,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12869,"endOffset":13717,"count":411}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13923,"endOffset":14298,"count":383}],"isBlockCoverage":false}]},{"scriptId":"7","url":"node:internal/errors","functions":[{"functionName":"setInternalPrepareStackTrace","ranges":[{"startOffset":2917,"endOffset":3010,"count":1}],"isBlockCoverage":true},{"functionName":"hideStackFrames","ranges":[{"startOffset":15225,"endOffset":15533,"count":4}],"isBlockCoverage":false},{"functionName":"wrappedFn","ranges":[{"startOffset":15259,"endOffset":15472,"count":1079}],"isBlockCoverage":false}]},{"scriptId":"8","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":167,"endOffset":322,"count":107},{"startOffset":216,"endOffset":319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3929,"endOffset":3981,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4048,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4243,"endOffset":4676,"count":1},{"startOffset":4303,"endOffset":4594,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13335,"endOffset":13373,"count":46}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14965,"endOffset":15037,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15426,"endOffset":15722,"count":1},{"startOffset":15686,"endOffset":15721,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16565,"endOffset":16630,"count":5}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16634,"endOffset":16695,"count":1}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16699,"endOffset":16756,"count":1}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16823,"endOffset":16886,"count":1}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17398,"endOffset":17579,"count":1},{"startOffset":17550,"endOffset":17576,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17585,"endOffset":17710,"count":1},{"startOffset":17651,"endOffset":17676,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":18072,"endOffset":18652,"count":1},{"startOffset":18296,"endOffset":18346,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18721,"endOffset":19347,"count":1},{"startOffset":18839,"endOffset":18852,"count":0},{"startOffset":18933,"endOffset":19042,"count":0}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/validators","functions":[{"functionName":"isInt32","ranges":[{"startOffset":1111,"endOffset":1172,"count":70}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1931,"endOffset":2253,"count":5},{"startOffset":2026,"endOffset":2199,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3158,"endOffset":3632,"count":3},{"startOffset":3332,"endOffset":3402,"count":0},{"startOffset":3437,"endOffset":3507,"count":0},{"startOffset":3545,"endOffset":3627,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3882,"endOffset":4327,"count":5},{"startOffset":3953,"endOffset":4019,"count":0},{"startOffset":4052,"endOffset":4118,"count":0},{"startOffset":4143,"endOffset":4146,"count":0},{"startOffset":4246,"endOffset":4324,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4529,"endOffset":4644,"count":411}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":5355,"count":6},{"startOffset":4978,"endOffset":5032,"count":0},{"startOffset":5125,"endOffset":5139,"count":0},{"startOffset":5165,"endOffset":5352,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5896,"count":1},{"startOffset":5626,"endOffset":5893,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5701,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6102,"endOffset":6219,"count":4},{"startOffset":6161,"endOffset":6216,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6822,"endOffset":7870,"count":7},{"startOffset":6914,"endOffset":7162,"count":3},{"startOffset":6966,"endOffset":7040,"count":0},{"startOffset":7081,"endOffset":7155,"count":0},{"startOffset":7162,"endOffset":7865,"count":4},{"startOffset":7297,"endOffset":7371,"count":0},{"startOffset":7473,"endOffset":7495,"count":0},{"startOffset":7497,"endOffset":7571,"count":0},{"startOffset":7732,"endOffset":7782,"count":0},{"startOffset":7784,"endOffset":7858,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13555,"endOffset":13674,"count":11}],"isBlockCoverage":false}]},{"scriptId":"13","url":"node:internal/util","functions":[{"functionName":"normalizeEncoding","ranges":[{"startOffset":5530,"endOffset":5664,"count":78},{"startOffset":5601,"endOffset":5619,"count":0},{"startOffset":5635,"endOffset":5663,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":11266,"endOffset":13380,"count":3},{"startOffset":11389,"endOffset":11445,"count":1},{"startOffset":11536,"endOffset":11822,"count":0},{"startOffset":13160,"endOffset":13326,"count":10}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":12028,"endOffset":12761,"count":0}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":16415,"endOffset":16643,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":17165,"endOffset":18136,"count":2}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17390,"endOffset":17539,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17647,"endOffset":17850,"count":2}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":18140,"endOffset":19081,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18359,"endOffset":18605,"count":4},{"startOffset":18408,"endOffset":18463,"count":0},{"startOffset":18489,"endOffset":18522,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18717,"endOffset":18791,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":19085,"endOffset":19187,"count":2}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":20429,"endOffset":20627,"count":108}],"isBlockCoverage":true},{"functionName":"getInternalGlobal","ranges":[{"startOffset":20652,"endOffset":20934,"count":54},{"startOffset":20714,"endOffset":20905,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeExec","ranges":[{"startOffset":20938,"endOffset":21154,"count":53}],"isBlockCoverage":true},{"functionName":"getCrossRelmRegex","ranges":[{"startOffset":21203,"endOffset":22011,"count":31},{"startOffset":21301,"endOffset":21315,"count":30},{"startOffset":21315,"endOffset":21386,"count":1},{"startOffset":21386,"endOffset":21404,"count":0},{"startOffset":21404,"endOffset":21508,"count":1},{"startOffset":21508,"endOffset":21526,"count":0},{"startOffset":21526,"endOffset":21570,"count":1},{"startOffset":21570,"endOffset":21588,"count":0},{"startOffset":21588,"endOffset":21629,"count":1},{"startOffset":21629,"endOffset":21647,"count":0},{"startOffset":21647,"endOffset":21689,"count":1},{"startOffset":21689,"endOffset":21707,"count":0},{"startOffset":21707,"endOffset":21748,"count":1},{"startOffset":21748,"endOffset":21766,"count":0},{"startOffset":21766,"endOffset":22010,"count":1}],"isBlockCoverage":true},{"functionName":"SideEffectFreeRegExpPrototypeSymbolReplace","ranges":[{"startOffset":22015,"endOffset":22171,"count":31}],"isBlockCoverage":true},{"functionName":"getLazy","ranges":[{"startOffset":22708,"endOffset":22930,"count":2}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22792,"endOffset":22926,"count":266},{"startOffset":22837,"endOffset":22902,"count":2}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":23059,"endOffset":23753,"count":1},{"startOffset":23539,"endOffset":23721,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":23830,"endOffset":23930,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23954,"endOffset":24508,"count":2}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":24013,"endOffset":24082,"count":2}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":24088,"endOffset":24315,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":24321,"endOffset":24455,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24461,"endOffset":24505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":535,"endOffset":674,"count":240},{"startOffset":593,"endOffset":649,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":818,"endOffset":967,"count":5},{"startOffset":875,"endOffset":937,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":971,"endOffset":1055,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":1059,"endOffset":1499,"count":240},{"startOffset":1269,"endOffset":1298,"count":11},{"startOffset":1299,"endOffset":1328,"count":9},{"startOffset":1334,"endOffset":1454,"count":9},{"startOffset":1454,"endOffset":1495,"count":231}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":151}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1280,"endOffset":1394,"count":2}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/util/inspect","functions":[{"functionName":"formatWithOptions","ranges":[{"startOffset":74769,"endOffset":74964,"count":1}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":75352,"endOffset":79500,"count":1},{"startOffset":75581,"endOffset":79288,"count":0},{"startOffset":79293,"endOffset":79499,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":523,"endOffset":1008,"count":1},{"startOffset":617,"endOffset":961,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":898,"endOffset":955,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":988,"endOffset":999,"count":3}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1449,"endOffset":1457,"count":316}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1586,"endOffset":2160,"count":3},{"startOffset":1662,"endOffset":2130,"count":2},{"startOffset":1682,"endOffset":2080,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1774,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2386,"endOffset":3452,"count":3}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2418,"endOffset":2517,"count":3}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2533,"endOffset":2939,"count":3},{"startOffset":2788,"endOffset":2818,"count":1},{"startOffset":2826,"endOffset":2865,"count":1},{"startOffset":2873,"endOffset":2927,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2971,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":3064,"endOffset":3265,"count":3},{"startOffset":3114,"endOffset":3144,"count":1},{"startOffset":3152,"endOffset":3191,"count":1},{"startOffset":3199,"endOffset":3253,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3339,"endOffset":3375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"20","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6815,"endOffset":6886,"count":5}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":8390,"endOffset":8470,"count":7}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8583,"endOffset":8633,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":10333,"endOffset":11023,"count":5}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13922,"endOffset":16304,"count":11}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":16309,"endOffset":18258,"count":5}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":18444,"endOffset":18538,"count":5}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":19223,"endOffset":19470,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19669,"endOffset":19800,"count":1}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":20434,"endOffset":21891,"count":1},{"startOffset":20588,"endOffset":20600,"count":0},{"startOffset":20677,"endOffset":20689,"count":0},{"startOffset":20869,"endOffset":21126,"count":0},{"startOffset":21135,"endOffset":21862,"count":0}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":25322,"endOffset":26057,"count":1},{"startOffset":25511,"endOffset":25663,"count":0},{"startOffset":25699,"endOffset":26034,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:buffer","functions":[{"functionName":"alignPool","ranges":[{"startOffset":4215,"endOffset":4343,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8350,"endOffset":8378,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8647,"endOffset":9644,"count":1}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":11527,"endOffset":11806,"count":3},{"startOffset":11640,"endOffset":11653,"count":0},{"startOffset":11654,"endOffset":11665,"count":0},{"startOffset":11667,"endOffset":11771,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12344,"endOffset":12463,"count":3}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13145,"endOffset":13708,"count":1}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13712,"endOffset":14153,"count":1}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16100,"endOffset":16254,"count":75}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17933,"endOffset":17997,"count":1}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18011,"endOffset":18057,"count":3}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21411,"endOffset":23283,"count":4},{"startOffset":21565,"endOffset":21806,"count":0},{"startOffset":21812,"endOffset":22239,"count":0},{"startOffset":22245,"endOffset":22403,"count":0},{"startOffset":22409,"endOffset":22569,"count":0},{"startOffset":22575,"endOffset":22964,"count":0},{"startOffset":22970,"endOffset":23105,"count":0},{"startOffset":23111,"endOffset":23275,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24744,"endOffset":25353,"count":3},{"startOffset":24817,"endOffset":24867,"count":0},{"startOffset":24924,"endOffset":24934,"count":0},{"startOffset":24966,"endOffset":24976,"count":0},{"startOffset":25029,"endOffset":25041,"count":0},{"startOffset":25058,"endOffset":25081,"count":0},{"startOffset":25110,"endOffset":25120,"count":0},{"startOffset":25159,"endOffset":25193,"count":0},{"startOffset":25268,"endOffset":25309,"count":0}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":27324,"endOffset":27426,"count":7}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31668,"endOffset":31811,"count":3}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":32072,"endOffset":32146,"count":1}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/worker/js_transferable","functions":[{"functionName":"markTransferMode","ranges":[{"startOffset":2670,"endOffset":3075,"count":120},{"startOffset":2776,"endOffset":2804,"count":0},{"startOffset":2828,"endOffset":2835,"count":0},{"startOffset":2964,"endOffset":2983,"count":0},{"startOffset":3005,"endOffset":3027,"count":3}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/process/per_thread","functions":[{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12614,"endOffset":12954,"count":1},{"startOffset":12695,"endOffset":12876,"count":0},{"startOffset":12908,"endOffset":12951,"count":0}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3924,"endOffset":4129,"count":141},{"startOffset":3976,"endOffset":4007,"count":75},{"startOffset":4009,"endOffset":4126,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7924,"endOffset":8571,"count":141},{"startOffset":8043,"endOffset":8077,"count":0},{"startOffset":8116,"endOffset":8238,"count":75},{"startOffset":8238,"endOffset":8362,"count":66},{"startOffset":8277,"endOffset":8362,"count":0},{"startOffset":8481,"endOffset":8547,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9944,"endOffset":10263,"count":2}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10394,"endOffset":10453,"count":2}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11078,"endOffset":11162,"count":8}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":14041,"endOffset":14440,"count":2}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":14643,"endOffset":14879,"count":2},{"startOffset":14762,"endOffset":14831,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":15004,"endOffset":16106,"count":2},{"startOffset":15085,"endOffset":15622,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":16528,"endOffset":17824,"count":75},{"startOffset":16610,"endOffset":16668,"count":0},{"startOffset":16693,"endOffset":16721,"count":0},{"startOffset":16782,"endOffset":16793,"count":0},{"startOffset":16816,"endOffset":16853,"count":0},{"startOffset":16859,"endOffset":16885,"count":0},{"startOffset":16891,"endOffset":16903,"count":0},{"startOffset":16926,"endOffset":16962,"count":0},{"startOffset":16970,"endOffset":17017,"count":0},{"startOffset":17023,"endOffset":17034,"count":0},{"startOffset":17057,"endOffset":17114,"count":0},{"startOffset":17122,"endOffset":17168,"count":0},{"startOffset":17174,"endOffset":17185,"count":0},{"startOffset":17208,"endOffset":17263,"count":0},{"startOffset":17271,"endOffset":17319,"count":0},{"startOffset":17325,"endOffset":17336,"count":0},{"startOffset":17359,"endOffset":17417,"count":0},{"startOffset":17423,"endOffset":17434,"count":0},{"startOffset":17457,"endOffset":17515,"count":0},{"startOffset":17523,"endOffset":17570,"count":0},{"startOffset":17576,"endOffset":17587,"count":0},{"startOffset":17610,"endOffset":17666,"count":0},{"startOffset":17672,"endOffset":17683,"count":0},{"startOffset":17706,"endOffset":17762,"count":0},{"startOffset":17767,"endOffset":17823,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19924,"endOffset":20656,"count":151},{"startOffset":19987,"endOffset":20009,"count":0},{"startOffset":20011,"endOffset":20120,"count":0},{"startOffset":20317,"endOffset":20337,"count":0},{"startOffset":20408,"endOffset":20477,"count":0},{"startOffset":20498,"endOffset":20655,"count":0}],"isBlockCoverage":true},{"functionName":"possiblyTransformPath","ranges":[{"startOffset":21035,"endOffset":21554,"count":85},{"startOffset":21105,"endOffset":21535,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21599,"endOffset":21761,"count":85}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":330,"endOffset":580,"count":223},{"startOffset":391,"endOffset":539,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:path","functions":[{"functionName":"isPathSeparator","ranges":[{"startOffset":1770,"endOffset":1876,"count":64998},{"startOffset":1841,"endOffset":1872,"count":64846}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":1906},{"startOffset":2036,"endOffset":2063,"count":1780},{"startOffset":2065,"endOffset":2132,"count":264},{"startOffset":2104,"endOffset":2131,"count":138}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":879},{"startOffset":2425,"endOffset":4194,"count":59782},{"startOffset":2460,"endOffset":2502,"count":58903},{"startOffset":2502,"endOffset":2597,"count":879},{"startOffset":2547,"endOffset":2553,"count":844},{"startOffset":2553,"endOffset":2597,"count":35},{"startOffset":2597,"endOffset":2632,"count":58938},{"startOffset":2632,"endOffset":4090,"count":6110},{"startOffset":2665,"endOffset":2678,"count":6055},{"startOffset":2680,"endOffset":2707,"count":107},{"startOffset":2707,"endOffset":4044,"count":6003},{"startOffset":2729,"endOffset":3793,"count":15},{"startOffset":2759,"endOffset":2785,"count":8},{"startOffset":2786,"endOffset":2861,"count":0},{"startOffset":2862,"endOffset":2937,"count":0},{"startOffset":2972,"endOffset":3462,"count":8},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3462,"endOffset":3637,"count":7},{"startOffset":3490,"endOffset":3637,"count":0},{"startOffset":3648,"endOffset":3784,"count":7},{"startOffset":3713,"endOffset":3731,"count":0},{"startOffset":3793,"endOffset":4044,"count":5988},{"startOffset":3841,"endOffset":3910,"count":5169},{"startOffset":3910,"endOffset":3987,"count":819},{"startOffset":4044,"endOffset":4090,"count":6102},{"startOffset":4090,"endOffset":4189,"count":52828},{"startOffset":4118,"endOffset":4132,"count":572},{"startOffset":4134,"endOffset":4157,"count":92},{"startOffset":4157,"endOffset":4189,"count":52736}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4964,"endOffset":9889,"count":844},{"startOffset":5127,"endOffset":9422,"count":1005},{"startOffset":5165,"endOffset":5345,"count":1004},{"startOffset":5303,"endOffset":5336,"count":1},{"startOffset":5345,"endOffset":6310,"count":1},{"startOffset":5425,"endOffset":6310,"count":0},{"startOffset":6310,"endOffset":6534,"count":1004},{"startOffset":6534,"endOffset":6699,"count":0},{"startOffset":6699,"endOffset":8719,"count":1004},{"startOffset":6732,"endOffset":8254,"count":0},{"startOffset":8290,"endOffset":8361,"count":956},{"startOffset":8363,"endOffset":8719,"count":844},{"startOffset":8719,"endOffset":8752,"count":1004},{"startOffset":8752,"endOffset":9080,"count":844},{"startOffset":8794,"endOffset":9017,"count":0},{"startOffset":9080,"endOffset":9112,"count":1004},{"startOffset":9112,"endOffset":9180,"count":0},{"startOffset":9180,"endOffset":9415,"count":1004},{"startOffset":9346,"endOffset":9374,"count":844},{"startOffset":9376,"endOffset":9406,"count":844},{"startOffset":9833,"endOffset":9883,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":9961,"endOffset":13124,"count":35},{"startOffset":10071,"endOffset":10082,"count":0},{"startOffset":10255,"endOffset":10412,"count":0},{"startOffset":10445,"endOffset":12177,"count":0},{"startOffset":12213,"endOffset":12281,"count":2},{"startOffset":12283,"endOffset":12619,"count":2},{"startOffset":12773,"endOffset":12784,"count":0},{"startOffset":12813,"endOffset":12827,"count":0},{"startOffset":12836,"endOffset":12847,"count":0},{"startOffset":12951,"endOffset":12964,"count":0},{"startOffset":12996,"endOffset":13051,"count":33},{"startOffset":13023,"endOffset":13036,"count":0},{"startOffset":13051,"endOffset":13097,"count":2},{"startOffset":13098,"endOffset":13118,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":13197,"endOffset":13626,"count":91},{"startOffset":13308,"endOffset":13321,"count":0},{"startOffset":13498,"endOffset":13557,"count":46},{"startOffset":13558,"endOffset":13619,"count":20}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":13701,"endOffset":15911,"count":2},{"startOffset":13752,"endOffset":13763,"count":0},{"startOffset":13846,"endOffset":14075,"count":4},{"startOffset":13987,"endOffset":14059,"count":2},{"startOffset":14116,"endOffset":14127,"count":0},{"startOffset":15016,"endOffset":15479,"count":0},{"startOffset":15690,"endOffset":15723,"count":0},{"startOffset":15803,"endOffset":15860,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20173,"endOffset":21304,"count":520},{"startOffset":20313,"endOffset":20325,"count":0},{"startOffset":20419,"endOffset":20431,"count":0},{"startOffset":20511,"endOffset":20930,"count":0},{"startOffset":21279,"endOffset":21303,"count":0}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":21376,"endOffset":24011,"count":203},{"startOffset":21484,"endOffset":21495,"count":0},{"startOffset":21616,"endOffset":21780,"count":0},{"startOffset":21843,"endOffset":23263,"count":0},{"startOffset":23464,"endOffset":23467,"count":0},{"startOffset":23597,"endOffset":23854,"count":2156},{"startOffset":23663,"endOffset":23752,"count":201},{"startOffset":23752,"endOffset":23847,"count":1955},{"startOffset":23878,"endOffset":23958,"count":2},{"startOffset":23916,"endOffset":23927,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":24114,"endOffset":26969,"count":53},{"startOffset":24177,"endOffset":24207,"count":0},{"startOffset":24705,"endOffset":24725,"count":0},{"startOffset":24726,"endOffset":24757,"count":0},{"startOffset":24759,"endOffset":26325,"count":0},{"startOffset":26378,"endOffset":26871,"count":584},{"startOffset":26444,"endOffset":26675,"count":53},{"startOffset":26675,"endOffset":26864,"count":531},{"startOffset":26697,"endOffset":26864,"count":53},{"startOffset":26902,"endOffset":26912,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3754,"endOffset":4567,"count":117}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4335,"endOffset":4402,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4408,"endOffset":4485,"count":59}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4491,"endOffset":4564,"count":59}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":22625,"endOffset":22752,"count":165},{"startOffset":22677,"endOffset":22693,"count":14},{"startOffset":22694,"endOffset":22720,"count":14},{"startOffset":22721,"endOffset":22747,"count":14}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23099,"endOffset":34527,"count":117}],"isBlockCoverage":false},{"functionName":"setURLSearchParamsModified","ranges":[{"startOffset":23225,"endOffset":23722,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":23734,"endOffset":24260,"count":117},{"startOffset":23876,"endOffset":23926,"count":0},{"startOffset":24036,"endOffset":24069,"count":52},{"startOffset":24213,"endOffset":24255,"count":100}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":24273,"endOffset":24521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24527,"endOffset":25272,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromContext","ranges":[{"startOffset":25278,"endOffset":25618,"count":0}],"isBlockCoverage":false},{"functionName":"#getSearchFromParams","ranges":[{"startOffset":25624,"endOffset":25738,"count":0}],"isBlockCoverage":false},{"functionName":"#ensureSearchParamsUpdated","ranges":[{"startOffset":25744,"endOffset":26190,"count":97},{"startOffset":26015,"endOffset":26185,"count":0}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":26445,"endOffset":28133,"count":100},{"startOffset":26555,"endOffset":26576,"count":0},{"startOffset":26577,"endOffset":26676,"count":0},{"startOffset":27398,"endOffset":28128,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":28139,"endOffset":28328,"count":42}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":28334,"endOffset":28523,"count":55}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":28529,"endOffset":28753,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":28774,"endOffset":29672,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":29678,"endOffset":29784,"count":45}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":29790,"endOffset":29968,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":29974,"endOffset":30206,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":30212,"endOffset":30390,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":30396,"endOffset":30624,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":30630,"endOffset":30808,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":30814,"endOffset":31256,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":31262,"endOffset":31432,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":31438,"endOffset":31727,"count":31},{"startOffset":31607,"endOffset":31634,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":31733,"endOffset":31911,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":31917,"endOffset":32030,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":32036,"endOffset":32206,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":32212,"endOffset":32512,"count":59},{"startOffset":32280,"endOffset":32332,"count":0},{"startOffset":32365,"endOffset":32415,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":32518,"endOffset":32696,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":32702,"endOffset":32903,"count":0}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":32909,"endOffset":33118,"count":0}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":33139,"endOffset":33505,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":33511,"endOffset":33731,"count":0}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":33737,"endOffset":33907,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":33913,"endOffset":34100,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":34113,"endOffset":34524,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":42516,"endOffset":44046,"count":31},{"startOffset":42663,"endOffset":43042,"count":2824},{"startOffset":42695,"endOffset":43037,"count":31},{"startOffset":42874,"endOffset":42889,"count":0},{"startOffset":42892,"endOffset":43030,"count":0},{"startOffset":43200,"endOffset":43646,"count":0},{"startOffset":43930,"endOffset":43998,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":44591,"endOffset":45012,"count":31},{"startOffset":44721,"endOffset":44742,"count":17},{"startOffset":44742,"endOffset":44838,"count":14},{"startOffset":44774,"endOffset":44838,"count":0},{"startOffset":44878,"endOffset":44919,"count":0},{"startOffset":44981,"endOffset":45008,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":45846,"endOffset":46709,"count":31},{"startOffset":46002,"endOffset":46073,"count":0},{"startOffset":46162,"endOffset":46210,"count":0},{"startOffset":46217,"endOffset":46290,"count":0},{"startOffset":46350,"endOffset":46421,"count":0},{"startOffset":46481,"endOffset":46559,"count":0},{"startOffset":46619,"endOffset":46686,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":46713,"endOffset":48925,"count":31},{"startOffset":46887,"endOffset":47702,"count":0},{"startOffset":47775,"endOffset":47805,"count":0},{"startOffset":48128,"endOffset":48180,"count":0},{"startOffset":48187,"endOffset":48203,"count":0},{"startOffset":48682,"endOffset":48754,"count":0},{"startOffset":48813,"endOffset":48881,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":48929,"endOffset":49070,"count":151},{"startOffset":49027,"endOffset":49069,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1109,"endOffset":1197,"count":11},{"startOffset":1186,"endOffset":1189,"count":1},{"startOffset":1190,"endOffset":1193,"count":10}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1511,"endOffset":2522,"count":10},{"startOffset":1616,"endOffset":2372,"count":1},{"startOffset":1823,"endOffset":1858,"count":0},{"startOffset":1995,"endOffset":2037,"count":0},{"startOffset":2051,"endOffset":2102,"count":0},{"startOffset":2116,"endOffset":2176,"count":0},{"startOffset":2190,"endOffset":2217,"count":0},{"startOffset":2306,"endOffset":2327,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2670,"endOffset":3575,"count":1},{"startOffset":2775,"endOffset":2782,"count":0},{"startOffset":2834,"endOffset":2848,"count":0},{"startOffset":2897,"endOffset":2948,"count":0},{"startOffset":2954,"endOffset":3019,"count":0},{"startOffset":3025,"endOffset":3172,"count":0},{"startOffset":3485,"endOffset":3545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"34","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2232,"endOffset":2324,"count":20},{"startOffset":2313,"endOffset":2316,"count":10},{"startOffset":2317,"endOffset":2320,"count":10}],"isBlockCoverage":true},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2557,"endOffset":3106,"count":1},{"startOffset":2716,"endOffset":2770,"count":0},{"startOffset":2776,"endOffset":2834,"count":0},{"startOffset":2840,"endOffset":2896,"count":0},{"startOffset":2902,"endOffset":2956,"count":0},{"startOffset":2962,"endOffset":3043,"count":0}],"isBlockCoverage":true},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":3110,"endOffset":3697,"count":20},{"startOffset":3211,"endOffset":3278,"count":1},{"startOffset":3303,"endOffset":3394,"count":10},{"startOffset":3400,"endOffset":3485,"count":10},{"startOffset":3491,"endOffset":3588,"count":0},{"startOffset":3594,"endOffset":3689,"count":0}],"isBlockCoverage":true},{"functionName":"unhandledRejection","ranges":[{"startOffset":4141,"endOffset":4719,"count":10}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":4204,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":4723,"endOffset":5573,"count":10},{"startOffset":4930,"endOffset":5449,"count":0},{"startOffset":5496,"endOffset":5534,"count":0},{"startOffset":5541,"endOffset":5570,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6892,"endOffset":10162,"count":10},{"startOffset":7053,"endOffset":7237,"count":0},{"startOffset":7500,"endOffset":8791,"count":0},{"startOffset":8801,"endOffset":8911,"count":0},{"startOffset":8921,"endOffset":9090,"count":0},{"startOffset":9100,"endOffset":9545,"count":0},{"startOffset":9555,"endOffset":9840,"count":0},{"startOffset":9857,"endOffset":10063,"count":0}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":22}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":1}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":11},{"startOffset":3470,"endOffset":3482,"count":10},{"startOffset":3482,"endOffset":3595,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":11}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":1},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4320,"count":11},{"startOffset":4174,"endOffset":4297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":983,"endOffset":1322,"count":1},{"startOffset":1047,"endOffset":1319,"count":0}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:internal/vm","functions":[{"functionName":"isContext","ranges":[{"startOffset":848,"endOffset":946,"count":3}],"isBlockCoverage":true},{"functionName":"getHostDefinedOptionId","ranges":[{"startOffset":1414,"endOffset":2767,"count":2},{"startOffset":1627,"endOffset":1670,"count":0},{"startOffset":1719,"endOffset":1940,"count":0},{"startOffset":2219,"endOffset":2766,"count":0}],"isBlockCoverage":true},{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":3079,"endOffset":3781,"count":2},{"startOffset":3315,"endOffset":3391,"count":0},{"startOffset":3392,"endOffset":3464,"count":0},{"startOffset":3485,"endOffset":3780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":372,"endOffset":399,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1727,"endOffset":1792,"count":17}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1796,"endOffset":2398,"count":1},{"startOffset":1908,"endOffset":2096,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2402,"endOffset":3018,"count":17},{"startOffset":2709,"endOffset":2744,"count":0},{"startOffset":2800,"endOffset":2938,"count":0},{"startOffset":2940,"endOffset":3017,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3481,"endOffset":5425,"count":17},{"startOffset":3685,"endOffset":3705,"count":0},{"startOffset":3708,"endOffset":3715,"count":0},{"startOffset":3866,"endOffset":3965,"count":0},{"startOffset":4003,"endOffset":4071,"count":0},{"startOffset":4163,"endOffset":4182,"count":0},{"startOffset":4481,"endOffset":4487,"count":7},{"startOffset":4488,"endOffset":4502,"count":10},{"startOffset":4530,"endOffset":4724,"count":0},{"startOffset":4753,"endOffset":5031,"count":0},{"startOffset":5361,"endOffset":5417,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5976,"endOffset":6512,"count":17},{"startOffset":6117,"endOffset":6193,"count":0},{"startOffset":6201,"endOffset":6283,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6707,"endOffset":7521,"count":17},{"startOffset":6882,"endOffset":7457,"count":277230},{"startOffset":7265,"endOffset":7288,"count":269564},{"startOffset":7289,"endOffset":7312,"count":269564},{"startOffset":7314,"endOffset":7452,"count":7666}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":7527,"endOffset":7817,"count":17},{"startOffset":7761,"endOffset":7814,"count":10}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8883,"endOffset":9299,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8962,"endOffset":9151,"count":7},{"startOffset":9053,"endOffset":9103,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1957,"endOffset":2060,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":6036,"endOffset":6706,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6253,"endOffset":6351,"count":3},{"startOffset":6287,"endOffset":6310,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6364,"endOffset":6394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6530,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6645,"endOffset":6675,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8344,"endOffset":9834,"count":1},{"startOffset":8575,"endOffset":8589,"count":0},{"startOffset":8665,"endOffset":8691,"count":0},{"startOffset":8732,"endOffset":8932,"count":0},{"startOffset":8993,"endOffset":9021,"count":0},{"startOffset":9471,"endOffset":9761,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9934,"endOffset":10359,"count":1},{"startOffset":10155,"endOffset":10281,"count":0},{"startOffset":10304,"endOffset":10326,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10457,"endOffset":10641,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11921,"count":1},{"startOffset":11362,"endOffset":11380,"count":0},{"startOffset":11404,"endOffset":11442,"count":0},{"startOffset":11444,"endOffset":11916,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11957,"endOffset":12046,"count":1}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":21284,"endOffset":22303,"count":1},{"startOffset":21614,"endOffset":22302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22193,"endOffset":22298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"46","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":13823,"endOffset":14047,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":30391,"endOffset":31902,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":30554,"endOffset":30693,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30798,"endOffset":31656,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1477,"endOffset":3141,"count":2},{"startOffset":1633,"endOffset":1772,"count":1},{"startOffset":1780,"endOffset":1979,"count":0},{"startOffset":1987,"endOffset":1999,"count":1},{"startOffset":2005,"endOffset":2740,"count":1},{"startOffset":2295,"endOffset":2323,"count":0},{"startOffset":2325,"endOffset":2553,"count":0},{"startOffset":2748,"endOffset":3011,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2943,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3787,"endOffset":3882,"count":2},{"startOffset":3842,"endOffset":3879,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3886,"endOffset":4598,"count":1},{"startOffset":3924,"endOffset":3938,"count":0},{"startOffset":4178,"endOffset":4238,"count":0}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4255,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4602,"endOffset":5312,"count":2},{"startOffset":4640,"endOffset":5311,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4969,"endOffset":5152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":453,"endOffset":526,"count":6}],"isBlockCoverage":false},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":869,"endOffset":1047,"count":1},{"startOffset":949,"endOffset":1044,"count":0}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":254,"endOffset":352,"count":2}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":419,"endOffset":948,"count":2}],"isBlockCoverage":false}]},{"scriptId":"54","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5403,"endOffset":5670,"count":788},{"startOffset":5607,"endOffset":5627,"count":106}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11727,"endOffset":13423,"count":70},{"startOffset":11852,"endOffset":11883,"count":0},{"startOffset":12061,"endOffset":12154,"count":0},{"startOffset":12155,"endOffset":12195,"count":0},{"startOffset":12286,"endOffset":12296,"count":0},{"startOffset":12297,"endOffset":12300,"count":0},{"startOffset":12435,"endOffset":13422,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":70953,"endOffset":71051,"count":53}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":71302,"endOffset":71597,"count":53},{"startOffset":71388,"endOffset":71418,"count":0},{"startOffset":71439,"endOffset":71596,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":71725,"endOffset":71993,"count":447},{"startOffset":71782,"endOffset":71972,"count":4201},{"startOffset":71917,"endOffset":71945,"count":3807},{"startOffset":71956,"endOffset":71965,"count":394},{"startOffset":71972,"endOffset":71992,"count":53}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":72279,"endOffset":76227,"count":66},{"startOffset":72406,"endOffset":72426,"count":0},{"startOffset":72593,"endOffset":72630,"count":13},{"startOffset":72630,"endOffset":73408,"count":53},{"startOffset":73354,"endOffset":73377,"count":0},{"startOffset":73408,"endOffset":73550,"count":53},{"startOffset":73550,"endOffset":76150,"count":447},{"startOffset":73666,"endOffset":73802,"count":53},{"startOffset":73802,"endOffset":73964,"count":394},{"startOffset":74084,"endOffset":74227,"count":341},{"startOffset":74177,"endOffset":74203,"count":0},{"startOffset":74227,"endOffset":74296,"count":106},{"startOffset":74334,"endOffset":74385,"count":0},{"startOffset":74385,"endOffset":75610,"count":106},{"startOffset":74687,"endOffset":74714,"count":0},{"startOffset":74849,"endOffset":75528,"count":0},{"startOffset":75573,"endOffset":75603,"count":0},{"startOffset":75610,"endOffset":75935,"count":0},{"startOffset":75937,"endOffset":76145,"count":0},{"startOffset":76150,"endOffset":76166,"count":53}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":4762,"endOffset":4853,"count":1},{"startOffset":4809,"endOffset":4845,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4904,"endOffset":4947,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":6420,"endOffset":6846,"count":276},{"startOffset":6520,"endOffset":6621,"count":120},{"startOffset":6598,"endOffset":6616,"count":22},{"startOffset":6621,"endOffset":6696,"count":254},{"startOffset":6696,"endOffset":6710,"count":98},{"startOffset":6712,"endOffset":6825,"count":41},{"startOffset":6825,"endOffset":6845,"count":254}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":7357,"endOffset":7564,"count":79},{"startOffset":7430,"endOffset":7440,"count":78},{"startOffset":7458,"endOffset":7511,"count":78},{"startOffset":7468,"endOffset":7510,"count":26},{"startOffset":7513,"endOffset":7561,"count":72}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":7687,"endOffset":7847,"count":160},{"startOffset":7769,"endOffset":7784,"count":0},{"startOffset":7786,"endOffset":7844,"count":0}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":8379,"endOffset":9149,"count":53},{"startOffset":8695,"endOffset":8705,"count":0},{"startOffset":8724,"endOffset":9095,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11219,"endOffset":11246,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":11990,"endOffset":12695,"count":1},{"startOffset":12560,"endOffset":12692,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":13611,"endOffset":14843,"count":15},{"startOffset":13752,"endOffset":13835,"count":1},{"startOffset":13835,"endOffset":13932,"count":14},{"startOffset":13932,"endOffset":13977,"count":0},{"startOffset":13978,"endOffset":14046,"count":0},{"startOffset":14073,"endOffset":14822,"count":0},{"startOffset":14822,"endOffset":14842,"count":14}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":15212,"endOffset":15482,"count":87},{"startOffset":15303,"endOffset":15314,"count":45},{"startOffset":15314,"endOffset":15344,"count":42},{"startOffset":15344,"endOffset":15372,"count":0},{"startOffset":15373,"endOffset":15396,"count":42},{"startOffset":15399,"endOffset":15444,"count":0},{"startOffset":15444,"endOffset":15481,"count":42}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":15755,"endOffset":15984,"count":29},{"startOffset":15845,"endOffset":15964,"count":59},{"startOffset":15927,"endOffset":15959,"count":14},{"startOffset":15964,"endOffset":15983,"count":15}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":16174,"endOffset":16662,"count":53},{"startOffset":16456,"endOffset":16469,"count":0},{"startOffset":16642,"endOffset":16661,"count":0}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":16791,"endOffset":17096,"count":66},{"startOffset":16844,"endOffset":16861,"count":1},{"startOffset":16861,"endOffset":16923,"count":65},{"startOffset":16923,"endOffset":17093,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":17311,"endOffset":18285,"count":66},{"startOffset":17371,"endOffset":17388,"count":1},{"startOffset":17388,"endOffset":17481,"count":65},{"startOffset":17504,"endOffset":17534,"count":2},{"startOffset":17536,"endOffset":17561,"count":63},{"startOffset":17561,"endOffset":17616,"count":2},{"startOffset":17616,"endOffset":17644,"count":0},{"startOffset":17644,"endOffset":17824,"count":2},{"startOffset":17711,"endOffset":17793,"count":0},{"startOffset":17824,"endOffset":18282,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":18647,"endOffset":19485,"count":63},{"startOffset":18857,"endOffset":18872,"count":33},{"startOffset":18888,"endOffset":18899,"count":33},{"startOffset":18899,"endOffset":19025,"count":30},{"startOffset":19027,"endOffset":19482,"count":14},{"startOffset":19313,"endOffset":19477,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultExtensions","ranges":[{"startOffset":19550,"endOffset":20055,"count":28},{"startOffset":19725,"endOffset":20054,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19978,"endOffset":20050,"count":0}],"isBlockCoverage":false},{"functionName":"Module._findPath","ranges":[{"startOffset":20357,"endOffset":24558,"count":67},{"startOffset":20469,"endOffset":20494,"count":3},{"startOffset":20494,"endOffset":20559,"count":64},{"startOffset":20534,"endOffset":20559,"count":0},{"startOffset":20696,"endOffset":20721,"count":2},{"startOffset":20721,"endOffset":21318,"count":65},{"startOffset":20948,"endOffset":21310,"count":0},{"startOffset":21395,"endOffset":21860,"count":33},{"startOffset":21504,"endOffset":21590,"count":7},{"startOffset":21591,"endOffset":21853,"count":7},{"startOffset":21763,"endOffset":21851,"count":0},{"startOffset":21907,"endOffset":22066,"count":33},{"startOffset":22026,"endOffset":22061,"count":7},{"startOffset":22066,"endOffset":22131,"count":65},{"startOffset":22131,"endOffset":24536,"count":147},{"startOffset":22276,"endOffset":22286,"count":140},{"startOffset":22287,"endOffset":22384,"count":138},{"startOffset":22322,"endOffset":22360,"count":0},{"startOffset":22392,"endOffset":22417,"count":82},{"startOffset":22417,"endOffset":22447,"count":65},{"startOffset":22447,"endOffset":22592,"count":63},{"startOffset":22542,"endOffset":22585,"count":14},{"startOffset":22592,"endOffset":23991,"count":51},{"startOffset":22751,"endOffset":23755,"count":23},{"startOffset":22785,"endOffset":22980,"count":22},{"startOffset":22841,"endOffset":22903,"count":0},{"startOffset":22980,"endOffset":23746,"count":1},{"startOffset":23034,"endOffset":23684,"count":0},{"startOffset":23780,"endOffset":23984,"count":28},{"startOffset":23991,"endOffset":24013,"count":51},{"startOffset":24013,"endOffset":24024,"count":15},{"startOffset":24026,"endOffset":24250,"count":15},{"startOffset":24130,"endOffset":24180,"count":0},{"startOffset":24250,"endOffset":24351,"count":51},{"startOffset":24351,"endOffset":24536,"count":0},{"startOffset":24536,"endOffset":24557,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":24902,"endOffset":26513,"count":53},{"startOffset":25407,"endOffset":25482,"count":0},{"startOffset":25484,"endOffset":25531,"count":0},{"startOffset":25661,"endOffset":26487,"count":3776},{"startOffset":26055,"endOffset":26096,"count":3382},{"startOffset":26097,"endOffset":26130,"count":3382},{"startOffset":26132,"endOffset":26350,"count":447},{"startOffset":26160,"endOffset":26306,"count":343},{"startOffset":26350,"endOffset":26480,"count":3329},{"startOffset":26370,"endOffset":26480,"count":1831},{"startOffset":26406,"endOffset":26434,"count":1488},{"startOffset":26434,"endOffset":26471,"count":343}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":28066,"endOffset":29394,"count":66},{"startOffset":28147,"endOffset":28216,"count":0},{"startOffset":28304,"endOffset":28507,"count":34},{"startOffset":28386,"endOffset":28437,"count":26},{"startOffset":28438,"endOffset":28506,"count":0},{"startOffset":28509,"endOffset":28849,"count":32},{"startOffset":28573,"endOffset":28588,"count":31},{"startOffset":28590,"endOffset":28703,"count":31},{"startOffset":28703,"endOffset":28745,"count":1},{"startOffset":28837,"endOffset":28843,"count":0},{"startOffset":28849,"endOffset":28920,"count":34},{"startOffset":28921,"endOffset":28940,"count":34},{"startOffset":28942,"endOffset":29198,"count":0},{"startOffset":29198,"endOffset":29393,"count":34}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":32596,"endOffset":36586,"count":108},{"startOffset":32681,"endOffset":33528,"count":107},{"startOffset":33148,"endOffset":33523,"count":13},{"startOffset":33332,"endOffset":33406,"count":0},{"startOffset":33453,"endOffset":33523,"count":0},{"startOffset":33528,"endOffset":33583,"count":95},{"startOffset":33583,"endOffset":33865,"count":6},{"startOffset":33716,"endOffset":33778,"count":0},{"startOffset":33865,"endOffset":34022,"count":89},{"startOffset":34022,"endOffset":34968,"count":13},{"startOffset":34147,"endOffset":34968,"count":0},{"startOffset":34968,"endOffset":35030,"count":76},{"startOffset":35030,"endOffset":35116,"count":23},{"startOffset":35116,"endOffset":35249,"count":53},{"startOffset":35275,"endOffset":35665,"count":53},{"startOffset":35294,"endOffset":35484,"count":1},{"startOffset":35484,"endOffset":35536,"count":52},{"startOffset":35665,"endOffset":36555,"count":53},{"startOffset":35880,"endOffset":36295,"count":0},{"startOffset":36480,"endOffset":36550,"count":0},{"startOffset":36555,"endOffset":36585,"count":53}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":37059,"endOffset":40288,"count":89},{"startOffset":37157,"endOffset":37184,"count":23},{"startOffset":37184,"endOffset":37238,"count":66},{"startOffset":37238,"endOffset":37257,"count":0},{"startOffset":37259,"endOffset":38383,"count":0},{"startOffset":38383,"endOffset":38482,"count":66},{"startOffset":38482,"endOffset":38530,"count":0},{"startOffset":38532,"endOffset":39202,"count":0},{"startOffset":39202,"endOffset":39368,"count":66},{"startOffset":39368,"endOffset":39569,"count":0},{"startOffset":39569,"endOffset":39733,"count":66},{"startOffset":39733,"endOffset":40287,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":40725,"endOffset":41320,"count":14},{"startOffset":40925,"endOffset":41057,"count":0},{"startOffset":41181,"endOffset":41319,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":41991,"endOffset":42678,"count":53},{"startOffset":42335,"endOffset":42365,"count":0},{"startOffset":42367,"endOffset":42421,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":42973,"endOffset":43284,"count":107},{"startOffset":43035,"endOffset":43156,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":45019,"endOffset":46928,"count":51},{"startOffset":45329,"endOffset":46213,"count":0},{"startOffset":46346,"endOffset":46395,"count":34},{"startOffset":46575,"endOffset":46620,"count":0},{"startOffset":46621,"endOffset":46661,"count":0},{"startOffset":46663,"endOffset":46724,"count":0},{"startOffset":46809,"endOffset":46905,"count":17}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":47338,"endOffset":50024,"count":51},{"startOffset":47440,"endOffset":47450,"count":0},{"startOffset":47469,"endOffset":47626,"count":0},{"startOffset":47828,"endOffset":47862,"count":0},{"startOffset":48045,"endOffset":48223,"count":0},{"startOffset":48504,"endOffset":48528,"count":0},{"startOffset":48530,"endOffset":49287,"count":0},{"startOffset":49517,"endOffset":49547,"count":1},{"startOffset":49639,"endOffset":49781,"count":0},{"startOffset":49982,"endOffset":50003,"count":1}],"isBlockCoverage":true},{"functionName":"getMaybeCachedSource","ranges":[{"startOffset":50286,"endOffset":50703,"count":51},{"startOffset":50452,"endOffset":50530,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":50889,"endOffset":53023,"count":51},{"startOffset":51277,"endOffset":52804,"count":0},{"startOffset":52845,"endOffset":52881,"count":17},{"startOffset":52886,"endOffset":52971,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":53212,"endOffset":53633,"count":2},{"startOffset":53325,"endOffset":53335,"count":0},{"startOffset":53354,"endOffset":53459,"count":0},{"startOffset":53546,"endOffset":53630,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":55933,"endOffset":56926,"count":1},{"startOffset":56001,"endOffset":56021,"count":0},{"startOffset":56077,"endOffset":56102,"count":0},{"startOffset":56332,"endOffset":56381,"count":0},{"startOffset":56640,"endOffset":56787,"count":0}],"isBlockCoverage":true}]},{"scriptId":"62","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1221,"endOffset":1248,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1732,"endOffset":1868,"count":66}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1991,"endOffset":2394,"count":1},{"startOffset":2173,"endOffset":2177,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2466,"endOffset":2598,"count":14},{"startOffset":2532,"endOffset":2570,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2832,"endOffset":3222,"count":29},{"startOffset":2922,"endOffset":2941,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3322,"endOffset":3438,"count":51},{"startOffset":3367,"endOffset":3415,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":4041,"endOffset":6657,"count":51},{"startOffset":4183,"endOffset":4248,"count":0},{"startOffset":4319,"endOffset":5627,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4466,"endOffset":5621,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5650,"endOffset":5793,"count":107}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5987,"endOffset":6136,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":6289,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6877,"endOffset":7037,"count":2},{"startOffset":6960,"endOffset":7015,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9613,"endOffset":10135,"count":17},{"startOffset":9719,"endOffset":9748,"count":0},{"startOffset":9890,"endOffset":9990,"count":0},{"startOffset":9992,"endOffset":10134,"count":0}],"isBlockCoverage":true},{"functionName":"hasStartedUserCJSExecution","ranges":[{"startOffset":11241,"endOffset":11317,"count":1}],"isBlockCoverage":true},{"functionName":"setHasStartedUserCJSExecution","ranges":[{"startOffset":11322,"endOffset":11401,"count":51}],"isBlockCoverage":true},{"functionName":"hasStartedUserESMExecution","ranges":[{"startOffset":11406,"endOffset":11482,"count":1}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"checkPackageJSONIntegrity","ranges":[{"startOffset":477,"endOffset":882,"count":160},{"startOffset":562,"endOffset":753,"count":1},{"startOffset":681,"endOffset":733,"count":0},{"startOffset":780,"endOffset":879,"count":0}],"isBlockCoverage":true},{"functionName":"deserializePackageJSON","ranges":[{"startOffset":1181,"endOffset":2910,"count":161},{"startOffset":1286,"endOffset":1456,"count":1},{"startOffset":1456,"endOffset":2909,"count":160}],"isBlockCoverage":true},{"functionName":"requiresJSONParse","ranges":[{"startOffset":2192,"endOffset":2266,"count":95},{"startOffset":2224,"endOffset":2265,"count":16}],"isBlockCoverage":true},{"functionName":"get imports","ranges":[{"startOffset":2455,"endOffset":2674,"count":0}],"isBlockCoverage":false},{"functionName":"get exports","ranges":[{"startOffset":2681,"endOffset":2900,"count":95},{"startOffset":2750,"endOffset":2775,"count":16},{"startOffset":2776,"endOffset":2790,"count":79}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":3198,"endOffset":3661,"count":45},{"startOffset":3506,"endOffset":3517,"count":0},{"startOffset":3554,"endOffset":3570,"count":0}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":3882,"endOffset":4018,"count":45}],"isBlockCoverage":true},{"functionName":"getNearestParentPackageJSON","ranges":[{"startOffset":4351,"endOffset":4889,"count":116},{"startOffset":4505,"endOffset":4534,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/modules/esm/utils","functions":[{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1858,"endOffset":2252,"count":1},{"startOffset":2044,"endOffset":2048,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":10753,"endOffset":11146,"count":1}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":1114,"endOffset":1304,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":2572,"endOffset":4853,"count":1},{"startOffset":3587,"endOffset":3694,"count":0},{"startOffset":4601,"endOffset":4767,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":4857,"endOffset":5615,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":5619,"endOffset":6387,"count":1},{"startOffset":5998,"endOffset":6031,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":6391,"endOffset":6449,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":6885,"endOffset":9306,"count":1},{"startOffset":7926,"endOffset":7980,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":9310,"endOffset":9602,"count":13},{"startOffset":9433,"endOffset":9599,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":9606,"endOffset":10144,"count":1},{"startOffset":9992,"endOffset":10136,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10022,"endOffset":10127,"count":0}],"isBlockCoverage":false},{"functionName":"setupUndici","ranges":[{"startOffset":10223,"endOffset":10564,"count":1},{"startOffset":10298,"endOffset":10464,"count":0},{"startOffset":10521,"endOffset":10561,"count":0}],"isBlockCoverage":true},{"functionName":"setupNavigator","ranges":[{"startOffset":10672,"endOffset":11082,"count":1},{"startOffset":10809,"endOffset":10828,"count":0}],"isBlockCoverage":true},{"functionName":"setupWebCrypto","ranges":[{"startOffset":11190,"endOffset":12173,"count":1},{"startOffset":11327,"endOffset":11346,"count":0},{"startOffset":11853,"endOffset":12170,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":11528,"endOffset":11708,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":12018,"endOffset":12119,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":12177,"endOffset":12709,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":12819,"endOffset":13103,"count":1},{"startOffset":12960,"endOffset":12979,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":13107,"endOffset":13340,"count":1},{"startOffset":13212,"endOffset":13339,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":13344,"endOffset":13603,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13494,"endOffset":13592,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":13607,"endOffset":13843,"count":1},{"startOffset":13760,"endOffset":13840,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":13908,"endOffset":14101,"count":1},{"startOffset":13997,"endOffset":14098,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":14105,"endOffset":14862,"count":1},{"startOffset":14305,"endOffset":14859,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":14423,"endOffset":14580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14778,"endOffset":14852,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":14866,"endOffset":15129,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":15133,"endOffset":15728,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":15928,"endOffset":17939,"count":1},{"startOffset":16665,"endOffset":16975,"count":16},{"startOffset":16711,"endOffset":16948,"count":0},{"startOffset":17299,"endOffset":17504,"count":0},{"startOffset":17534,"endOffset":17936,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":17943,"endOffset":18525,"count":1},{"startOffset":18020,"endOffset":18522,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":18529,"endOffset":18806,"count":1},{"startOffset":18617,"endOffset":18803,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":18810,"endOffset":20917,"count":1},{"startOffset":18954,"endOffset":20498,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":18979,"endOffset":19068,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20742,"endOffset":20907,"count":5},{"startOffset":20822,"endOffset":20900,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":20921,"endOffset":22788,"count":1},{"startOffset":21051,"endOffset":22785,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":22792,"endOffset":22916,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":22920,"endOffset":23518,"count":1},{"startOffset":23262,"endOffset":23515,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":23522,"endOffset":23725,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":23729,"endOffset":23992,"count":1},{"startOffset":23815,"endOffset":23989,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":24105,"endOffset":24464,"count":1},{"startOffset":24302,"endOffset":24461,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":24468,"endOffset":24564,"count":1}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":828,"endOffset":2018,"count":1},{"startOffset":1006,"endOffset":1113,"count":0},{"startOffset":1412,"endOffset":1423,"count":0},{"startOffset":1657,"endOffset":1988,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":2185,"endOffset":3484,"count":1},{"startOffset":2292,"endOffset":2308,"count":0},{"startOffset":2794,"endOffset":2810,"count":0},{"startOffset":2929,"endOffset":2945,"count":0},{"startOffset":3009,"endOffset":3026,"count":0},{"startOffset":3218,"endOffset":3483,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":5930,"endOffset":6936,"count":1},{"startOffset":6509,"endOffset":6933,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6683,"endOffset":6926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"68","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5665,"endOffset":6163,"count":1},{"startOffset":5812,"endOffset":6021,"count":0},{"startOffset":6073,"endOffset":6162,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6100,"endOffset":6158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"69","url":"node:internal/net","functions":[{"functionName":"makeSyncWrite","ranges":[{"startOffset":1725,"endOffset":2152,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1764,"endOffset":2148,"count":1},{"startOffset":2033,"endOffset":2132,"count":0}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3922,"endOffset":4029,"count":4},{"startOffset":3976,"endOffset":4005,"count":1}],"isBlockCoverage":true}]},{"scriptId":"71","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1216,"count":1}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:vm","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13228,"count":1}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":2459,"endOffset":2586,"count":3}],"isBlockCoverage":true},{"functionName":"Script","ranges":[{"startOffset":2633,"endOffset":4132,"count":1},{"startOffset":2738,"endOffset":2786,"count":0},{"startOffset":3297,"endOffset":3362,"count":0},{"startOffset":3985,"endOffset":4056,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4138,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4445,"endOffset":4840,"count":1},{"startOffset":4663,"endOffset":4701,"count":0},{"startOffset":4703,"endOffset":4777,"count":0}],"isBlockCoverage":true},{"functionName":"runInNewContext","ranges":[{"startOffset":4846,"endOffset":5020,"count":1}],"isBlockCoverage":true},{"functionName":"validateContext","ranges":[{"startOffset":5027,"endOffset":5251,"count":1},{"startOffset":5113,"endOffset":5248,"count":0}],"isBlockCoverage":true},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5255,"endOffset":5963,"count":1},{"startOffset":5460,"endOffset":5527,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5967,"endOffset":7061,"count":2},{"startOffset":6027,"endOffset":6037,"count":0},{"startOffset":6371,"endOffset":6434,"count":0},{"startOffset":6487,"endOffset":6919,"count":0},{"startOffset":6969,"endOffset":7032,"count":0}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":7099,"endOffset":8492,"count":2},{"startOffset":7201,"endOffset":7521,"count":1},{"startOffset":7521,"endOffset":7562,"count":0},{"startOffset":7562,"endOffset":7605,"count":1},{"startOffset":7605,"endOffset":7662,"count":0},{"startOffset":7662,"endOffset":7745,"count":1},{"startOffset":7745,"endOffset":7932,"count":0},{"startOffset":7932,"endOffset":8491,"count":1}],"isBlockCoverage":true},{"functionName":"createScript","ranges":[{"startOffset":8496,"endOffset":8574,"count":1}],"isBlockCoverage":true},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8732,"endOffset":9207,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9211,"endOffset":9621,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9625,"endOffset":9984,"count":1},{"startOffset":9718,"endOffset":9762,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":9988,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":10183,"endOffset":11820,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12109,"endOffset":12693,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"evalmachine.<anonymous>","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4,"count":1}],"isBlockCoverage":true}]},{"scriptId":"74","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/bin/npm-prefix.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1}],"isBlockCoverage":true},{"functionName":"main","ranges":[{"startOffset":593,"endOffset":849,"count":1},{"startOffset":739,"endOffset":846,"count":0}],"isBlockCoverage":true}]},{"scriptId":"75","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29763,"count":1}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":441,"endOffset":523,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":480,"endOffset":499,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":511,"endOffset":522,"count":8}],"isBlockCoverage":true},{"functionName":"dirExists","ranges":[{"startOffset":545,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":659,"endOffset":722,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1184,"endOffset":28689,"count":1}],"isBlockCoverage":true},{"functionName":"get typeDefs","ranges":[{"startOffset":1305,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"Config","ranges":[{"startOffset":1354,"endOffset":3318,"count":1},{"startOffset":1887,"endOffset":2073,"count":155},{"startOffset":1980,"endOffset":2066,"count":18},{"startOffset":2823,"endOffset":2892,"count":7},{"startOffset":3216,"endOffset":3255,"count":7}],"isBlockCoverage":true},{"functionName":"Config.data.set","ranges":[{"startOffset":2916,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"Config.data.delete","ranges":[{"startOffset":3026,"endOffset":3111,"count":0}],"isBlockCoverage":false},{"functionName":"get loaded","ranges":[{"startOffset":3324,"endOffset":3369,"count":2}],"isBlockCoverage":true},{"functionName":"get prefix","ranges":[{"startOffset":3375,"endOffset":3466,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":3518,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3918,"endOffset":4074,"count":1},{"startOffset":3960,"endOffset":4035,"count":0}],"isBlockCoverage":true},{"functionName":"#get","ranges":[{"startOffset":4192,"endOffset":4480,"count":10},{"startOffset":4243,"endOffset":4267,"count":2},{"startOffset":4269,"endOffset":4343,"count":0},{"startOffset":4386,"endOffset":4394,"count":8},{"startOffset":4423,"endOffset":4451,"count":2},{"startOffset":4452,"endOffset":4463,"count":8},{"startOffset":4464,"endOffset":4475,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4486,"endOffset":5146,"count":0}],"isBlockCoverage":false},{"functionName":"get flat","ranges":[{"startOffset":5152,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":5673,"endOffset":6072,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":6078,"endOffset":7118,"count":1},{"startOffset":6116,"endOffset":6195,"count":0}],"isBlockCoverage":true},{"functionName":"loadDefaults","ranges":[{"startOffset":7124,"endOffset":8552,"count":1},{"startOffset":7401,"endOffset":7620,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8236,"endOffset":8283,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8292,"endOffset":8486,"count":1}],"isBlockCoverage":true},{"functionName":"loadHome","ranges":[{"startOffset":8558,"endOffset":8620,"count":1},{"startOffset":8603,"endOffset":8615,"count":0}],"isBlockCoverage":true},{"functionName":"loadGlobalPrefix","ranges":[{"startOffset":8626,"endOffset":9268,"count":1},{"startOffset":8676,"endOffset":8759,"count":0},{"startOffset":8788,"endOffset":8839,"count":0},{"startOffset":8981,"endOffset":9263,"count":0}],"isBlockCoverage":true},{"functionName":"loadEnv","ranges":[{"startOffset":9274,"endOffset":9809,"count":1},{"startOffset":9387,"endOffset":9754,"count":96},{"startOffset":9430,"endOffset":9446,"count":12},{"startOffset":9448,"endOffset":9476,"count":85},{"startOffset":9476,"endOffset":9754,"count":11}],"isBlockCoverage":true},{"functionName":"loadCLI","ranges":[{"startOffset":9815,"endOffset":10158,"count":1}],"isBlockCoverage":true},{"functionName":"nopt.invalidHandler","ranges":[{"startOffset":9855,"endOffset":9944,"count":0}],"isBlockCoverage":false},{"functionName":"get valid","ranges":[{"startOffset":10164,"endOffset":10372,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":10378,"endOffset":13156,"count":0}],"isBlockCoverage":false},{"functionName":"repair","ranges":[{"startOffset":13318,"endOffset":14322,"count":0}],"isBlockCoverage":false},{"functionName":"isDefault","ranges":[{"startOffset":14536,"endOffset":14854,"count":0}],"isBlockCoverage":false},{"functionName":"invalidHandler","ranges":[{"startOffset":14860,"endOffset":15925,"count":0}],"isBlockCoverage":false},{"functionName":"#getOneOfKeywords","ranges":[{"startOffset":15931,"endOffset":16310,"count":0}],"isBlockCoverage":false},{"functionName":"#loadObject","ranges":[{"startOffset":16316,"endOffset":17674,"count":7},{"startOffset":16470,"endOffset":16625,"count":0},{"startOffset":16663,"endOffset":16830,"count":0},{"startOffset":16909,"endOffset":17056,"count":2},{"startOffset":16971,"endOffset":17049,"count":0},{"startOffset":17056,"endOffset":17669,"count":5},{"startOffset":17141,"endOffset":17662,"count":170},{"startOffset":17267,"endOffset":17627,"count":14},{"startOffset":17341,"endOffset":17352,"count":9},{"startOffset":17354,"endOffset":17616,"count":0}],"isBlockCoverage":true},{"functionName":"#checkDeprecated","ranges":[{"startOffset":17680,"endOffset":17846,"count":14},{"startOffset":17780,"endOffset":17841,"count":0}],"isBlockCoverage":true},{"functionName":"parseField","ranges":[{"startOffset":17913,"endOffset":18010,"count":170}],"isBlockCoverage":true},{"functionName":"#loadFile","ranges":[{"startOffset":18016,"endOffset":18671,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18210,"endOffset":18606,"count":2},{"startOffset":18298,"endOffset":18320,"count":0},{"startOffset":18322,"endOffset":18538,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18615,"endOffset":18659,"count":2}],"isBlockCoverage":true},{"functionName":"loadBuiltinConfig","ranges":[{"startOffset":18677,"endOffset":18774,"count":1}],"isBlockCoverage":true},{"functionName":"loadProjectConfig","ranges":[{"startOffset":18780,"endOffset":20197,"count":1},{"startOffset":19179,"endOffset":19265,"count":0},{"startOffset":19345,"endOffset":19509,"count":0},{"startOffset":20034,"endOffset":20192,"count":0}],"isBlockCoverage":true},{"functionName":"loadLocalPrefix","ranges":[{"startOffset":20203,"endOffset":22701,"count":1},{"startOffset":20300,"endOffset":20358,"count":0},{"startOffset":20540,"endOffset":22622,"count":10},{"startOffset":20715,"endOffset":20736,"count":0},{"startOffset":20738,"endOffset":20763,"count":0},{"startOffset":20863,"endOffset":20920,"count":1},{"startOffset":20882,"endOffset":20920,"count":0},{"startOffset":20922,"endOffset":21226,"count":1},{"startOffset":21126,"endOffset":21156,"count":0},{"startOffset":21226,"endOffset":21274,"count":9},{"startOffset":21276,"endOffset":22615,"count":1},{"startOffset":21660,"endOffset":21692,"count":0},{"startOffset":21871,"endOffset":22606,"count":0},{"startOffset":22653,"endOffset":22696,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21628,"endOffset":21639,"count":0}],"isBlockCoverage":false},{"functionName":"loadUserConfig","ranges":[{"startOffset":22707,"endOffset":22791,"count":1}],"isBlockCoverage":true},{"functionName":"loadGlobalConfig","ranges":[{"startOffset":22797,"endOffset":22887,"count":1}],"isBlockCoverage":true},{"functionName":"save","ranges":[{"startOffset":22893,"endOffset":24082,"count":0}],"isBlockCoverage":false},{"functionName":"clearCredentialsByURI","ranges":[{"startOffset":24088,"endOffset":24993,"count":0}],"isBlockCoverage":false},{"functionName":"setCredentialsByURI","ranges":[{"startOffset":24999,"endOffset":26516,"count":0}],"isBlockCoverage":false},{"functionName":"getCredentialsByURI","ranges":[{"startOffset":26602,"endOffset":28474,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvs","ranges":[{"startOffset":28650,"endOffset":28686,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28784,"endOffset":29734,"count":7}],"isBlockCoverage":true},{"functionName":"ConfigData","ranges":[{"startOffset":28831,"endOffset":28958,"count":7},{"startOffset":28893,"endOffset":28907,"count":6}],"isBlockCoverage":true},{"functionName":"get data","ranges":[{"startOffset":28964,"endOffset":29005,"count":194}],"isBlockCoverage":true},{"functionName":"get valid","ranges":[{"startOffset":29011,"endOffset":29055,"count":0}],"isBlockCoverage":false},{"functionName":"set source","ranges":[{"startOffset":29061,"endOffset":29206,"count":7},{"startOffset":29101,"endOffset":29179,"count":0}],"isBlockCoverage":true},{"functionName":"get source","ranges":[{"startOffset":29212,"endOffset":29257,"count":7}],"isBlockCoverage":true},{"functionName":"set loadError","ranges":[{"startOffset":29263,"endOffset":29453,"count":2},{"startOffset":29345,"endOffset":29422,"count":0}],"isBlockCoverage":true},{"functionName":"get loadError","ranges":[{"startOffset":29459,"endOffset":29511,"count":0}],"isBlockCoverage":false},{"functionName":"set raw","ranges":[{"startOffset":29517,"endOffset":29686,"count":5},{"startOffset":29591,"endOffset":29662,"count":0}],"isBlockCoverage":true},{"functionName":"get raw","ranges":[{"startOffset":29692,"endOffset":29731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46804,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2793,"endOffset":3441,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3968,"endOffset":4725,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":5172,"endOffset":6381,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":7559,"endOffset":8336,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":9134,"endOffset":10648,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":11071,"endOffset":11286,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11691,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12539,"endOffset":12928,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":13395,"endOffset":13783,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":15161,"endOffset":17992,"count":14},{"startOffset":15342,"endOffset":15353,"count":0},{"startOffset":15354,"endOffset":15390,"count":0},{"startOffset":15392,"endOffset":15478,"count":0},{"startOffset":15530,"endOffset":16100,"count":0},{"startOffset":16194,"endOffset":16818,"count":0},{"startOffset":17043,"endOffset":17129,"count":0},{"startOffset":17175,"endOffset":17991,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15868,"endOffset":15881,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16407,"endOffset":16420,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16556,"endOffset":16569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17313,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17557,"endOffset":17570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17921,"endOffset":17934,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":18191,"endOffset":18339,"count":56},{"startOffset":18289,"endOffset":18335,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":19149,"endOffset":21433,"count":42},{"startOffset":19344,"endOffset":19502,"count":14},{"startOffset":19502,"endOffset":21313,"count":28},{"startOffset":19534,"endOffset":20381,"count":0},{"startOffset":20536,"endOffset":20771,"count":56},{"startOffset":20596,"endOffset":20764,"count":0},{"startOffset":20815,"endOffset":21234,"count":55},{"startOffset":20874,"endOffset":20896,"count":41},{"startOffset":20898,"endOffset":21227,"count":28},{"startOffset":21174,"endOffset":21187,"count":0},{"startOffset":21234,"endOffset":21313,"count":0},{"startOffset":21313,"endOffset":21432,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":21725,"endOffset":22689,"count":14},{"startOffset":21858,"endOffset":21874,"count":0},{"startOffset":21931,"endOffset":21948,"count":0},{"startOffset":22093,"endOffset":22656,"count":27},{"startOffset":22206,"endOffset":22265,"count":14},{"startOffset":22265,"endOffset":22651,"count":13},{"startOffset":22321,"endOffset":22651,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":23197,"endOffset":25843,"count":14},{"startOffset":23404,"endOffset":23443,"count":0},{"startOffset":23856,"endOffset":23932,"count":0},{"startOffset":23966,"endOffset":25842,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":26226,"endOffset":26793,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":27291,"endOffset":29824,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":29996,"endOffset":31086,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":31419,"endOffset":33616,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":33733,"endOffset":33845,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":33970,"endOffset":34257,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":34412,"endOffset":34607,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":34979,"endOffset":36389,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":36597,"endOffset":38470,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":38860,"endOffset":40273,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":40419,"endOffset":40699,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":41334,"endOffset":45095,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":45366,"endOffset":45991,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":46393,"endOffset":46798,"count":0}],"isBlockCoverage":false}]},{"scriptId":"77","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7860,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1027,"endOffset":1058,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1130,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1640,"endOffset":2011,"count":0}],"isBlockCoverage":false},{"functionName":"underNodeModules","ranges":[{"startOffset":2249,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2665,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":6613,"endOffset":6968,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":7120,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":7513,"endOffset":7742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1868,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":694,"endOffset":1042,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1420,"endOffset":1767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/walk-up-path/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"walkUp","ranges":[{"startOffset":153,"endOffset":412,"count":1},{"startOffset":223,"endOffset":409,"count":10},{"startOffset":319,"endOffset":351,"count":1},{"startOffset":351,"endOffset":402,"count":9}],"isBlockCoverage":true}]},{"scriptId":"80","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/ini/lib/ini.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7369,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":62,"endOffset":2449,"count":0}],"isBlockCoverage":false},{"functionName":"splitSections","ranges":[{"startOffset":2453,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":3082,"endOffset":5921,"count":2},{"startOffset":3426,"endOffset":4951,"count":5},{"startOffset":3443,"endOffset":3468,"count":3},{"startOffset":3469,"endOffset":3491,"count":3},{"startOffset":3493,"endOffset":3517,"count":2},{"startOffset":3517,"endOffset":3569,"count":3},{"startOffset":3569,"endOffset":3593,"count":0},{"startOffset":3593,"endOffset":3627,"count":3},{"startOffset":3627,"endOffset":3928,"count":0},{"startOffset":3928,"endOffset":4084,"count":3},{"startOffset":4049,"endOffset":4077,"count":2},{"startOffset":4084,"endOffset":4198,"count":0},{"startOffset":4198,"endOffset":4224,"count":3},{"startOffset":4224,"endOffset":4245,"count":0},{"startOffset":4246,"endOffset":4254,"count":3},{"startOffset":4285,"endOffset":4309,"count":0},{"startOffset":4309,"endOffset":4359,"count":3},{"startOffset":4360,"endOffset":4366,"count":0},{"startOffset":4406,"endOffset":4436,"count":3},{"startOffset":4437,"endOffset":4466,"count":3},{"startOffset":4467,"endOffset":4489,"count":0},{"startOffset":4497,"endOffset":4507,"count":3},{"startOffset":4578,"endOffset":4730,"count":0},{"startOffset":4730,"endOffset":4876,"count":3},{"startOffset":4876,"endOffset":4910,"count":0},{"startOffset":4910,"endOffset":4946,"count":3},{"startOffset":5125,"endOffset":5845,"count":3},{"startOffset":5202,"endOffset":5233,"count":0},{"startOffset":5259,"endOffset":5772,"count":0},{"startOffset":5774,"endOffset":5845,"count":0},{"startOffset":5875,"endOffset":5902,"count":0}],"isBlockCoverage":true},{"functionName":"isQuoted","ranges":[{"startOffset":5942,"endOffset":6057,"count":6},{"startOffset":5982,"endOffset":6002,"count":0},{"startOffset":6033,"endOffset":6053,"count":0}],"isBlockCoverage":true},{"functionName":"safe","ranges":[{"startOffset":6074,"endOffset":6349,"count":0}],"isBlockCoverage":false},{"functionName":"unsafe","ranges":[{"startOffset":6368,"endOffset":7260,"count":6},{"startOffset":6391,"endOffset":6396,"count":0},{"startOffset":6427,"endOffset":6649,"count":0},{"startOffset":6810,"endOffset":7167,"count":99},{"startOffset":6859,"endOffset":7013,"count":1},{"startOffset":6900,"endOffset":6934,"count":0},{"startOffset":7013,"endOffset":7160,"count":98},{"startOffset":7047,"endOffset":7072,"count":0},{"startOffset":7094,"endOffset":7124,"count":1},{"startOffset":7124,"endOffset":7160,"count":97},{"startOffset":7182,"endOffset":7211,"count":0},{"startOffset":7243,"endOffset":7259,"count":0}],"isBlockCoverage":true}]},{"scriptId":"81","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/nopt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":985,"count":1}],"isBlockCoverage":true},{"functionName":"nopt","ranges":[{"startOffset":544,"endOffset":798,"count":1},{"startOffset":670,"endOffset":675,"count":0},{"startOffset":705,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":802,"endOffset":983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/nopt-lib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13297,"count":1}],"isBlockCoverage":true},{"functionName":"hasOwn","ranges":[{"startOffset":133,"endOffset":185,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":205,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeDef","ranges":[{"startOffset":542,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeDef","ranges":[{"startOffset":597,"endOffset":643,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotHaveTypeDef","ranges":[{"startOffset":672,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"nopt","ranges":[{"startOffset":720,"endOffset":1398,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1269,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":1402,"endOffset":4988,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2055,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":4992,"endOffset":6850,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6854,"endOffset":11147,"count":1},{"startOffset":7365,"endOffset":11144,"count":0}],"isBlockCoverage":true},{"functionName":"singleCharacters","ranges":[{"startOffset":11211,"endOffset":11610,"count":0}],"isBlockCoverage":false},{"functionName":"resolveShort","ranges":[{"startOffset":11614,"endOffset":13181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/abbrev/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"abbrev","ranges":[{"startOffset":27,"endOffset":1292,"count":2},{"startOffset":87,"endOffset":112,"count":0},{"startOffset":123,"endOffset":129,"count":0},{"startOffset":180,"endOffset":257,"count":195},{"startOffset":235,"endOffset":252,"count":0},{"startOffset":545,"endOffset":1271,"count":195},{"startOffset":608,"endOffset":613,"count":2},{"startOffset":697,"endOffset":721,"count":0},{"startOffset":793,"endOffset":1048,"count":909},{"startOffset":869,"endOffset":898,"count":699},{"startOffset":932,"endOffset":961,"count":726},{"startOffset":986,"endOffset":1001,"count":378},{"startOffset":1003,"endOffset":1041,"count":168},{"startOffset":1088,"endOffset":1146,"count":51},{"startOffset":1146,"endOffset":1200,"count":144},{"startOffset":1200,"endOffset":1266,"count":912},{"startOffset":1266,"endOffset":1271,"count":144}],"isBlockCoverage":true},{"functionName":"lexSort","ranges":[{"startOffset":1296,"endOffset":1363,"count":532},{"startOffset":1340,"endOffset":1343,"count":0},{"startOffset":1352,"endOffset":1355,"count":431},{"startOffset":1356,"endOffset":1360,"count":101}],"isBlockCoverage":true}]},{"scriptId":"84","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":144,"count":1},{"startOffset":97,"endOffset":128,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":99,"endOffset":128,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":142,"count":3}],"isBlockCoverage":true}]},{"scriptId":"85","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/nopt/lib/type-defs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2121,"count":1}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":161,"endOffset":229,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":233,"endOffset":673,"count":0}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":677,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"validateDate","ranges":[{"startOffset":843,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":1032,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"validateUrl","ranges":[{"startOffset":1322,"endOffset":1578,"count":0}],"isBlockCoverage":false},{"functionName":"validateStream","ranges":[{"startOffset":1582,"endOffset":1700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5031,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2543,"endOffset":2708,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":3146,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4305,"endOffset":4339,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4443,"endOffset":4486,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4585,"endOffset":4628,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4817,"endOffset":5028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10576,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1013,"endOffset":1616,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1620,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4875,"endOffset":5028,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5032,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5373,"endOffset":5520,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5524,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5909,"endOffset":6248,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6469,"endOffset":6586,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6593,"endOffset":8081,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8085,"endOffset":8530,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8534,"endOffset":8735,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8739,"endOffset":9072,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9076,"endOffset":9646,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9650,"endOffset":10347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13066,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1637,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMarkTransferMode","ranges":[{"startOffset":1777,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2466,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2738,"endOffset":2866,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3458,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":4146,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":4681,"endOffset":4767,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":4805,"endOffset":4887,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4893,"endOffset":5014,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5020,"endOffset":5153,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":5237,"endOffset":5400,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":5484,"endOffset":5768,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":5861,"endOffset":7250,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7256,"endOffset":8038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8044,"endOffset":8404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8410,"endOffset":9040,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9046,"endOffset":9310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9316,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":9786,"endOffset":9888,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":9934,"endOffset":9942,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":10274,"endOffset":10648,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10674,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11536,"endOffset":11756,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11833,"endOffset":11924,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":12025,"endOffset":12594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8726,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":930,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1043,"endOffset":1051,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1056,"endOffset":7235,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":7239,"endOffset":8179,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":8183,"endOffset":8662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9298,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":1152,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1585,"endOffset":1812,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1816,"endOffset":2022,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":2026,"endOffset":2307,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":2311,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2537,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2716,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2894,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":3012,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":3352,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3648,"endOffset":3946,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3977,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":4416,"endOffset":4724,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4752,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":5113,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":5424,"endOffset":5728,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5732,"endOffset":6064,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":6068,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":6294,"endOffset":6516,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":6520,"endOffset":7049,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":7053,"endOffset":7312,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":7316,"endOffset":7448,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":7452,"endOffset":7646,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7650,"endOffset":8001,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":8005,"endOffset":8155,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":8159,"endOffset":8474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5703,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":566,"endOffset":5700,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12817,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1107,"endOffset":1554,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1558,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1896,"endOffset":2191,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2195,"endOffset":2375,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2379,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3483,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":4112,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4211,"endOffset":10909,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10913,"endOffset":12767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7716,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":520,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":957,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1877,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2541,"endOffset":2631,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2635,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2976,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":3346,"endOffset":4065,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":4069,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":5250,"endOffset":5689,"count":0}],"isBlockCoverage":false},{"functionName":"constructNT","ranges":[{"startOffset":5693,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":6473,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":6575,"endOffset":6637,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":6641,"endOffset":6764,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":6802,"endOffset":7615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6794,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":2414,"endOffset":4450,"count":2},{"startOffset":2480,"endOffset":2507,"count":0},{"startOffset":3220,"endOffset":3360,"count":1},{"startOffset":3400,"endOffset":3580,"count":0},{"startOffset":3635,"endOffset":3661,"count":0},{"startOffset":3717,"endOffset":3745,"count":0},{"startOffset":3802,"endOffset":3832,"count":0},{"startOffset":3890,"endOffset":3922,"count":0},{"startOffset":3978,"endOffset":4006,"count":0},{"startOffset":4066,"endOffset":4102,"count":0},{"startOffset":4137,"endOffset":4174,"count":0},{"startOffset":4179,"endOffset":4223,"count":0},{"startOffset":4291,"endOffset":4447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4326,"endOffset":4440,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5622,"endOffset":5840,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5847,"endOffset":6115,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":6196,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":6385,"endOffset":6507,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":6527,"endOffset":6618,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":6655,"endOffset":6791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3376,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":140,"endOffset":190,"count":2}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":308,"endOffset":2188,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":2223,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2502,"endOffset":3325,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53085,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1894,"endOffset":1921,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2925,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3859,"endOffset":4090,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3937,"endOffset":3981,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3988,"endOffset":4080,"count":18},{"startOffset":4019,"endOffset":4039,"count":6},{"startOffset":4039,"endOffset":4073,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6309,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6406,"endOffset":6579,"count":2},{"startOffset":6437,"endOffset":6520,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6662,"endOffset":6762,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6769,"endOffset":7006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7081,"endOffset":7171,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7178,"endOffset":7351,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7427,"endOffset":7519,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7526,"endOffset":7702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7777,"endOffset":7882,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7889,"endOffset":8165,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":8183,"endOffset":10228,"count":2},{"startOffset":8590,"endOffset":8618,"count":0},{"startOffset":8684,"endOffset":8712,"count":0},{"startOffset":8965,"endOffset":9002,"count":0},{"startOffset":9355,"endOffset":9385,"count":0},{"startOffset":9670,"endOffset":9699,"count":0},{"startOffset":9700,"endOffset":9730,"count":0},{"startOffset":9781,"endOffset":9944,"count":0},{"startOffset":10123,"endOffset":10225,"count":0}],"isBlockCoverage":true},{"functionName":"onConstructed","ranges":[{"startOffset":10274,"endOffset":10395,"count":0}],"isBlockCoverage":false},{"functionName":"Readable","ranges":[{"startOffset":10400,"endOffset":11476,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":11617,"endOffset":11651,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11704,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":11790,"endOffset":12053,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":12288,"endOffset":12564,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":12663,"endOffset":12936,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftByteMode","ranges":[{"startOffset":12943,"endOffset":14042,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftObjectMode","ranges":[{"startOffset":14046,"endOffset":14295,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkUnshiftValue","ranges":[{"startOffset":14299,"endOffset":14641,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushByteMode","ranges":[{"startOffset":14645,"endOffset":16088,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunkPushObjectMode","ranges":[{"startOffset":16092,"endOffset":16713,"count":0}],"isBlockCoverage":false},{"functionName":"canPushMore","ranges":[{"startOffset":16717,"endOffset":17053,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":17057,"endOffset":18030,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":18064,"endOffset":18222,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":18289,"endOffset":18879,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":18944,"endOffset":19310,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":19427,"endOffset":19922,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":20022,"endOffset":24836,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":24841,"endOffset":25829,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":26035,"endOffset":26375,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":26379,"endOffset":27069,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":27428,"endOffset":27640,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":27644,"endOffset":29508,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":29785,"endOffset":29853,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":29884,"endOffset":34552,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":34557,"endOffset":35254,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":35288,"endOffset":36020,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":36150,"endOffset":37188,"count":3},{"startOffset":36286,"endOffset":36726,"count":0},{"startOffset":36755,"endOffset":37168,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":37286,"endOffset":38012,"count":1},{"startOffset":37492,"endOffset":37886,"count":0},{"startOffset":37910,"endOffset":37945,"count":0},{"startOffset":37947,"endOffset":37992,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":38118,"endOffset":38727,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":38732,"endOffset":39454,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":39458,"endOffset":39549,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":39707,"endOffset":40230,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":40235,"endOffset":40413,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":40417,"endOffset":40742,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":40773,"endOffset":41096,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":41101,"endOffset":41256,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":41445,"endOffset":42513,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":42560,"endOffset":42614,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":42649,"endOffset":42797,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":42802,"endOffset":43059,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":43063,"endOffset":44187,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44414,"endOffset":44811,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44818,"endOffset":44953,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45041,"endOffset":45107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45195,"endOffset":45409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45503,"endOffset":45571,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45658,"endOffset":45742,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45830,"endOffset":45892,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45904,"endOffset":46017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46099,"endOffset":46155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46241,"endOffset":46331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46415,"endOffset":46502,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46577,"endOffset":46663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46713,"endOffset":46799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":46876,"endOffset":46965,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":46972,"endOffset":47271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47352,"endOffset":47442,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47592,"endOffset":47639,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":47725,"endOffset":47785,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":47792,"endOffset":47960,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":48277,"endOffset":50827,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":50831,"endOffset":51065,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":51069,"endOffset":51988,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":51992,"endOffset":52158,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":52178,"endOffset":52249,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":52319,"endOffset":52487,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":52510,"endOffset":52648,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":52670,"endOffset":52808,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":52829,"endOffset":53082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1781,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":575,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":776,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1140,"endOffset":1778,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1491,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":409,"endOffset":579,"count":4},{"startOffset":508,"endOffset":531,"count":0},{"startOffset":569,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":583,"endOffset":715,"count":3},{"startOffset":651,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":719,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":941,"endOffset":1386,"count":4},{"startOffset":1090,"endOffset":1308,"count":1},{"startOffset":1135,"endOffset":1275,"count":0},{"startOffset":1308,"endOffset":1385,"count":3}],"isBlockCoverage":true}]},{"scriptId":"99","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5307,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2236,"endOffset":2494,"count":3},{"startOffset":2338,"endOffset":2475,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2713,"endOffset":2916,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3248,"endOffset":3644,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3930,"endOffset":4128,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4348,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4871,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5034,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5133,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4549,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":255,"endOffset":4521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34251,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2697,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3803,"endOffset":4034,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3881,"endOffset":3925,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3932,"endOffset":4024,"count":20},{"startOffset":3963,"endOffset":3983,"count":2},{"startOffset":3983,"endOffset":4017,"count":18}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7077,"endOffset":7155,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7162,"endOffset":7335,"count":2},{"startOffset":7193,"endOffset":7276,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7411,"endOffset":7511,"count":6},{"startOffset":7462,"endOffset":7496,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7518,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7883,"endOffset":7983,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7990,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8375,"endOffset":8452,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8459,"endOffset":8632,"count":1},{"startOffset":8573,"endOffset":8625,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8827,"endOffset":8927,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8934,"endOffset":9140,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9216,"endOffset":9294,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9301,"endOffset":9475,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":9493,"endOffset":11852,"count":2},{"startOffset":9776,"endOffset":9804,"count":0},{"startOffset":9870,"endOffset":9898,"count":0},{"startOffset":10195,"endOffset":10232,"count":0},{"startOffset":10288,"endOffset":10319,"count":0},{"startOffset":10583,"endOffset":10613,"count":0},{"startOffset":10875,"endOffset":10881,"count":0},{"startOffset":10914,"endOffset":10943,"count":0},{"startOffset":10944,"endOffset":10974,"count":0},{"startOffset":11025,"endOffset":11239,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":11856,"endOffset":12025,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":12065,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12296,"endOffset":12409,"count":0}],"isBlockCoverage":false},{"functionName":"onConstructed","ranges":[{"startOffset":12461,"endOffset":12655,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":12660,"endOffset":13810,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":13896,"endOffset":14105,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":14210,"endOffset":14280,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":14285,"endOffset":15732,"count":1},{"startOffset":14421,"endOffset":14442,"count":0},{"startOffset":14468,"endOffset":14515,"count":0},{"startOffset":14658,"endOffset":14681,"count":0},{"startOffset":14689,"endOffset":14811,"count":0},{"startOffset":14903,"endOffset":14990,"count":0},{"startOffset":14997,"endOffset":15325,"count":0},{"startOffset":15385,"endOffset":15436,"count":0},{"startOffset":15482,"endOffset":15534,"count":0},{"startOffset":15549,"endOffset":15644,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":15763,"endOffset":15961,"count":1}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":15992,"endOffset":16095,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":16128,"endOffset":16379,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":16424,"endOffset":16757,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":16952,"endOffset":18171,"count":1},{"startOffset":17070,"endOffset":17073,"count":0},{"startOffset":17208,"endOffset":17628,"count":0},{"startOffset":17944,"endOffset":17984,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":18175,"endOffset":18625,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":18629,"endOffset":19025,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":19029,"endOffset":21697,"count":1},{"startOffset":19149,"endOffset":19226,"count":0},{"startOffset":19346,"endOffset":19351,"count":0},{"startOffset":19487,"endOffset":20121,"count":0},{"startOffset":20173,"endOffset":20216,"count":0},{"startOffset":20296,"endOffset":20317,"count":0},{"startOffset":20688,"endOffset":21049,"count":0},{"startOffset":21103,"endOffset":21165,"count":0},{"startOffset":21167,"endOffset":21227,"count":0},{"startOffset":21479,"endOffset":21627,"count":0},{"startOffset":21634,"endOffset":21689,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":21701,"endOffset":21892,"count":1}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":21896,"endOffset":22425,"count":1},{"startOffset":22077,"endOffset":22098,"count":0},{"startOffset":22118,"endOffset":22186,"count":0},{"startOffset":22303,"endOffset":22334,"count":0},{"startOffset":22377,"endOffset":22422,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":22500,"endOffset":23069,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":23138,"endOffset":24860,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":24892,"endOffset":25067,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":25135,"endOffset":26835,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":26840,"endOffset":27283,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":27287,"endOffset":27937,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":27941,"endOffset":28485,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":28489,"endOffset":29007,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":29011,"endOffset":29676,"count":0}],"isBlockCoverage":false},{"functionName":"callFinishedCallbacks","ranges":[{"startOffset":29680,"endOffset":30009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30098,"endOffset":30203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30256,"endOffset":30364,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30371,"endOffset":30627,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30679,"endOffset":31093,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":31100,"endOffset":31239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31299,"endOffset":31420,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31482,"endOffset":31605,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31663,"endOffset":31761,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31818,"endOffset":31937,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31998,"endOffset":32154,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32219,"endOffset":32319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32377,"endOffset":32473,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32531,"endOffset":32624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32699,"endOffset":32799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32863,"endOffset":33127,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":33210,"endOffset":33500,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":33591,"endOffset":33625,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":33678,"endOffset":33718,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":33788,"endOffset":33956,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":33979,"endOffset":34117,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":34139,"endOffset":34248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":336,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7325,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4001,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5627,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6101,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6262,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6393,"endOffset":7158,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7191,"endOffset":7322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1809,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1566,"endOffset":1713,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1752,"endOffset":1806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10195,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2088,"endOffset":2343,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2148,"endOffset":2338,"count":1},{"startOffset":2247,"endOffset":2316,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2742,"endOffset":2755,"count":1}],"isBlockCoverage":true},{"functionName":"getOSType","ranges":[{"startOffset":2808,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2874,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2941,"endOffset":2954,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":3004,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":3070,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3124,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3180,"endOffset":3200,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3234,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3288,"endOffset":3308,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3343,"endOffset":3361,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3402,"endOffset":3426,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3462,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3515,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3679,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":4079,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4563,"endOffset":4607,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4635,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4690,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"platform.<computed>","ranges":[{"startOffset":4774,"endOffset":4796,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4833,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5487,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5543,"endOffset":5592,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5626,"endOffset":5643,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5735,"endOffset":5993,"count":21}],"isBlockCoverage":true},{"functionName":"getCIDR","ranges":[{"startOffset":5997,"endOffset":6985,"count":5},{"startOffset":6195,"endOffset":6259,"count":1},{"startOffset":6306,"endOffset":6948,"count":85},{"startOffset":6339,"endOffset":6424,"count":66},{"startOffset":6376,"endOffset":6405,"count":61},{"startOffset":6405,"endOffset":6424,"count":5},{"startOffset":6424,"endOffset":6943,"count":24},{"startOffset":6553,"endOffset":6627,"count":3},{"startOffset":6582,"endOffset":6618,"count":0},{"startOffset":6627,"endOffset":6936,"count":21},{"startOffset":6811,"endOffset":6927,"count":4},{"startOffset":6848,"endOffset":6888,"count":0}],"isBlockCoverage":true},{"functionName":"networkInterfaces","ranges":[{"startOffset":7209,"endOffset":7930,"count":1},{"startOffset":7337,"endOffset":7351,"count":0},{"startOffset":7396,"endOffset":7907,"count":5},{"startOffset":7722,"endOffset":7746,"count":1},{"startOffset":7825,"endOffset":7861,"count":1},{"startOffset":7861,"endOffset":7902,"count":4}],"isBlockCoverage":true},{"functionName":"setPriority","ranges":[{"startOffset":8021,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8387,"endOffset":8655,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8973,"endOffset":9277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/proc-log/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3533,"count":1}],"isBlockCoverage":true},{"functionName":"standard","ranges":[{"startOffset":312,"endOffset":397,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":411,"endOffset":493,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":508,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":605,"endOffset":687,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":1157,"endOffset":1236,"count":0}],"isBlockCoverage":false},{"functionName":"notice","ranges":[{"startOffset":1251,"endOffset":1331,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":1344,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":1435,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"verbose","ranges":[{"startOffset":1529,"endOffset":1610,"count":0}],"isBlockCoverage":false},{"functionName":"http","ranges":[{"startOffset":1623,"endOffset":1701,"count":0}],"isBlockCoverage":false},{"functionName":"silly","ranges":[{"startOffset":1715,"endOffset":1794,"count":4}],"isBlockCoverage":true},{"functionName":"timing","ranges":[{"startOffset":1809,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":1903,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":1981,"endOffset":2045,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":2192,"endOffset":2555,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":2567,"endOffset":2639,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":2823,"endOffset":3170,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3182,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3258,"endOffset":3521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":76,"count":1}],"isBlockCoverage":false}]},{"scriptId":"108","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36011,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":3421,"endOffset":3515,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3581,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3697,"endOffset":3747,"count":0}],"isBlockCoverage":false},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":4038,"endOffset":4171,"count":10}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4213,"endOffset":10584,"count":3}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":4299,"endOffset":4525,"count":3},{"startOffset":4458,"endOffset":4462,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":4531,"endOffset":4590,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":4596,"endOffset":4634,"count":6}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":4640,"endOffset":4724,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":4730,"endOffset":4788,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":4794,"endOffset":4860,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":4866,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":4926,"endOffset":4972,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":4978,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":5095,"endOffset":5178,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":5184,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":5259,"endOffset":5407,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5413,"endOffset":5475,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":5481,"endOffset":5547,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":5553,"endOffset":5629,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":5635,"endOffset":5748,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":5754,"endOffset":5839,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":5845,"endOffset":5928,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5942,"endOffset":6765,"count":3},{"startOffset":5977,"endOffset":6017,"count":0},{"startOffset":6050,"endOffset":6093,"count":0},{"startOffset":6328,"endOffset":6700,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6268,"endOffset":6310,"count":3}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":6415,"endOffset":6530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6533,"endOffset":6682,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6772,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":7038,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9099,"endOffset":9253,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9572,"endOffset":9729,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9735,"endOffset":10150,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10156,"endOffset":10211,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10217,"endOffset":10307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10313,"endOffset":10348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10354,"endOffset":10581,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":10588,"endOffset":10970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10702,"endOffset":10761,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10748,"endOffset":10760,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10768,"endOffset":10960,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdSync","ranges":[{"startOffset":10974,"endOffset":11267,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":11271,"endOffset":11749,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":11753,"endOffset":11876,"count":14},{"startOffset":11798,"endOffset":11807,"count":0},{"startOffset":11814,"endOffset":11873,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":11880,"endOffset":13055,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":13059,"endOffset":15398,"count":3},{"startOffset":13653,"endOffset":13659,"count":0},{"startOffset":13687,"endOffset":13737,"count":0},{"startOffset":13773,"endOffset":13811,"count":0},{"startOffset":14065,"endOffset":14139,"count":0},{"startOffset":14329,"endOffset":14333,"count":0},{"startOffset":14422,"endOffset":14479,"count":0},{"startOffset":14576,"endOffset":14587,"count":0},{"startOffset":14646,"endOffset":14708,"count":0},{"startOffset":14733,"endOffset":14921,"count":0},{"startOffset":15000,"endOffset":15390,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":15555,"endOffset":15801,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":15805,"endOffset":16079,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":16083,"endOffset":16476,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":16600,"endOffset":16998,"count":5},{"startOffset":16993,"endOffset":16997,"count":3}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":17002,"endOffset":18555,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":18559,"endOffset":18935,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18939,"endOffset":20339,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":20343,"endOffset":20824,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":20828,"endOffset":21214,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":21218,"endOffset":21354,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21358,"endOffset":21605,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":21609,"endOffset":21815,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21819,"endOffset":22285,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":22289,"endOffset":22464,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22468,"endOffset":22635,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22639,"endOffset":23204,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":23208,"endOffset":25303,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":25307,"endOffset":25837,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":25841,"endOffset":26164,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":26168,"endOffset":27502,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":27506,"endOffset":27765,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27769,"endOffset":28103,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":28107,"endOffset":28438,"count":10},{"startOffset":28396,"endOffset":28437,"count":2}],"isBlockCoverage":true},{"functionName":"statfs","ranges":[{"startOffset":28442,"endOffset":28780,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":28784,"endOffset":29187,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":29191,"endOffset":29416,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":29420,"endOffset":29640,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":29644,"endOffset":29918,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":29922,"endOffset":30156,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":30160,"endOffset":30501,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":30505,"endOffset":30790,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":30794,"endOffset":31133,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":31137,"endOffset":31484,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":31488,"endOffset":31775,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":31779,"endOffset":32131,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":32135,"endOffset":32425,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":32429,"endOffset":32906,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":32910,"endOffset":33815,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":33819,"endOffset":33935,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":33939,"endOffset":34185,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":34189,"endOffset":34544,"count":5},{"startOffset":34308,"endOffset":34314,"count":0},{"startOffset":34358,"endOffset":34395,"count":0},{"startOffset":34477,"endOffset":34543,"count":3}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":34548,"endOffset":35225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35254,"endOffset":35292,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":35296,"endOffset":35448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7760,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":754,"endOffset":6635,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":6823,"endOffset":7428,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7432,"endOffset":7696,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11649,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1486,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1540,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1902,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2666,"endOffset":3532,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3759,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":4019,"endOffset":4310,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4402,"endOffset":4844,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4877,"endOffset":5166,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5201,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5464,"endOffset":6464,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":7011,"endOffset":7954,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":8177,"endOffset":8185,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8312,"endOffset":8660,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8691,"endOffset":8763,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8796,"endOffset":8870,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8875,"endOffset":8929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9159,"endOffset":9195,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9200,"endOffset":9241,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":9282,"endOffset":11507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7311,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":747,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":908,"endOffset":7251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40480,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3970,"endOffset":9668,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9916,"endOffset":10018,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":10022,"endOffset":10137,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10253,"endOffset":10306,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10406,"endOffset":10451,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10457,"endOffset":10656,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10802,"endOffset":11064,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11070,"endOffset":11389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11395,"endOffset":11646,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11652,"endOffset":11741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11747,"endOffset":11921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11927,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12136,"endOffset":13348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13354,"endOffset":14397,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14487,"endOffset":14666,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14753,"endOffset":14890,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14988,"endOffset":15130,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15415,"endOffset":15581,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15587,"endOffset":17366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17372,"endOffset":18065,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18071,"endOffset":18483,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18489,"endOffset":20766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20772,"endOffset":21245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21251,"endOffset":21515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21521,"endOffset":22015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22021,"endOffset":22516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22522,"endOffset":23304,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23310,"endOffset":23747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23753,"endOffset":24038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24044,"endOffset":24308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24314,"endOffset":24580,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24586,"endOffset":24746,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24752,"endOffset":25446,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":25452,"endOffset":25607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25613,"endOffset":25773,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25779,"endOffset":25971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25977,"endOffset":26298,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26304,"endOffset":26625,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27069,"endOffset":27724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27730,"endOffset":28459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28537,"endOffset":29508,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":29695,"endOffset":29868,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29991,"endOffset":30571,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30611,"endOffset":39149,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39468,"endOffset":39859,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12802,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":403,"endOffset":605,"count":4},{"startOffset":567,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":996,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1271,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2298,"endOffset":12217,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":12250,"endOffset":12679,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2886,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":492,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1270,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1963,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2462,"endOffset":2796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/type-defs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1449,"count":1}],"isBlockCoverage":true},{"functionName":"validateSemver","ranges":[{"startOffset":204,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"validatePath","ranges":[{"startOffset":398,"endOffset":518,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/umask.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":14,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":792,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":48,"endOffset":142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":59,"endOffset":305,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9058,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":318,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2320,"endOffset":2522,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2528,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2577,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2987,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3294,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4182,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4903,"endOffset":9026,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":235,"count":1},{"startOffset":94,"endOffset":142,"count":0},{"startOffset":146,"endOffset":193,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":148,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":199,"endOffset":207,"count":43}],"isBlockCoverage":true}]},{"scriptId":"121","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":894,"count":1},{"startOffset":238,"endOffset":285,"count":0}],"isBlockCoverage":true}]},{"scriptId":"122","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8154,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":979,"endOffset":1197,"count":43},{"startOffset":1045,"endOffset":1178,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1221,"endOffset":1505,"count":43},{"startOffset":1420,"endOffset":1425,"count":5},{"startOffset":1426,"endOffset":1437,"count":38},{"startOffset":1484,"endOffset":1489,"count":5},{"startOffset":1490,"endOffset":1501,"count":38}],"isBlockCoverage":true}]},{"scriptId":"123","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":339,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":156,"endOffset":306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":433,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":55,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":325,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/nerf-dart.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":473,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":262,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/env-replace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":428,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":129,"endOffset":426,"count":227}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":160,"endOffset":425,"count":1},{"startOffset":234,"endOffset":249,"count":0},{"startOffset":325,"endOffset":376,"count":0}],"isBlockCoverage":true}]},{"scriptId":"127","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/parse-field.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2315,"count":1}],"isBlockCoverage":true},{"functionName":"parseField","ranges":[{"startOffset":269,"endOffset":2282,"count":172},{"startOffset":339,"endOffset":359,"count":114},{"startOffset":361,"endOffset":381,"count":108},{"startOffset":381,"endOffset":677,"count":64},{"startOffset":677,"endOffset":714,"count":52},{"startOffset":854,"endOffset":876,"count":63},{"startOffset":955,"endOffset":1038,"count":6},{"startOffset":977,"endOffset":980,"count":0},{"startOffset":1038,"endOffset":1286,"count":58},{"startOffset":1286,"endOffset":1343,"count":1},{"startOffset":1343,"endOffset":1409,"count":57},{"startOffset":1409,"endOffset":1421,"count":0},{"startOffset":1422,"endOffset":1433,"count":0},{"startOffset":1435,"endOffset":1458,"count":0},{"startOffset":1458,"endOffset":1577,"count":57},{"startOffset":1577,"endOffset":1587,"count":16},{"startOffset":1588,"endOffset":1600,"count":16},{"startOffset":1602,"endOffset":1773,"count":16},{"startOffset":1629,"endOffset":1653,"count":0},{"startOffset":1661,"endOffset":1687,"count":0},{"startOffset":1695,"endOffset":1719,"count":0},{"startOffset":1727,"endOffset":1761,"count":0},{"startOffset":1773,"endOffset":1819,"count":57},{"startOffset":1819,"endOffset":1849,"count":0},{"startOffset":1849,"endOffset":1867,"count":57},{"startOffset":1867,"endOffset":2062,"count":12},{"startOffset":1929,"endOffset":1937,"count":0},{"startOffset":1967,"endOffset":1974,"count":3},{"startOffset":1976,"endOffset":2021,"count":3},{"startOffset":2021,"endOffset":2057,"count":9},{"startOffset":2062,"endOffset":2081,"count":57},{"startOffset":2081,"endOffset":2214,"count":0},{"startOffset":2214,"endOffset":2233,"count":57},{"startOffset":2233,"endOffset":2245,"count":0},{"startOffset":2247,"endOffset":2265,"count":0},{"startOffset":2265,"endOffset":2281,"count":57}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":989,"endOffset":1032,"count":1}],"isBlockCoverage":true}]},{"scriptId":"128","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/set-envs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3573,"count":1}],"isBlockCoverage":true},{"functionName":"envKey","ranges":[{"startOffset":382,"endOffset":535,"count":3},{"startOffset":428,"endOffset":469,"count":2},{"startOffset":470,"endOffset":532,"count":2}],"isBlockCoverage":true},{"functionName":"envVal","ranges":[{"startOffset":554,"endOffset":732,"count":6},{"startOffset":580,"endOffset":618,"count":1},{"startOffset":622,"endOffset":732,"count":5},{"startOffset":675,"endOffset":679,"count":0},{"startOffset":709,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":590,"endOffset":604,"count":1}],"isBlockCoverage":true},{"functionName":"sameConfigValue","ranges":[{"startOffset":760,"endOffset":863,"count":263},{"startOffset":797,"endOffset":819,"count":9},{"startOffset":820,"endOffset":833,"count":255},{"startOffset":837,"endOffset":863,"count":8}],"isBlockCoverage":true},{"functionName":"sameArrayValue","ranges":[{"startOffset":890,"endOffset":1302,"count":8},{"startOffset":940,"endOffset":964,"count":0},{"startOffset":1007,"endOffset":1284,"count":0}],"isBlockCoverage":true},{"functionName":"setEnv","ranges":[{"startOffset":1321,"endOffset":1470,"count":3},{"startOffset":1424,"endOffset":1439,"count":2},{"startOffset":1441,"endOffset":1467,"count":2}],"isBlockCoverage":true},{"functionName":"setEnvs","ranges":[{"startOffset":1490,"endOffset":3543,"count":1},{"startOffset":2245,"endOffset":2943,"count":160},{"startOffset":2310,"endOffset":2315,"count":5},{"startOffset":2336,"endOffset":2358,"count":142},{"startOffset":2360,"endOffset":2384,"count":22},{"startOffset":2384,"endOffset":2442,"count":138},{"startOffset":2442,"endOffset":2694,"count":125},{"startOffset":2637,"endOffset":2687,"count":0},{"startOffset":2694,"endOffset":2938,"count":13},{"startOffset":2859,"endOffset":2878,"count":10},{"startOffset":2881,"endOffset":2931,"count":3},{"startOffset":3396,"endOffset":3450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"129","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2148,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":518,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"Object.entries.reduce.shorthands","ranges":[{"startOffset":877,"endOffset":1097,"count":155},{"startOffset":1001,"endOffset":1049,"count":22}],"isBlockCoverage":true}]},{"scriptId":"130","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/definitions/definitions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":75619,"count":1},{"startOffset":1279,"endOffset":1303,"count":0},{"startOffset":1304,"endOffset":1371,"count":0},{"startOffset":1421,"endOffset":1429,"count":0},{"startOffset":1433,"endOffset":1460,"count":0},{"startOffset":2005,"endOffset":2011,"count":0},{"startOffset":2056,"endOffset":2064,"count":0},{"startOffset":13922,"endOffset":13953,"count":0},{"startOffset":43557,"endOffset":43566,"count":0},{"startOffset":72270,"endOffset":72277,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadFile","ranges":[{"startOffset":334,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"buildOmitList","ranges":[{"startOffset":516,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalAddresses","ranges":[{"startOffset":1535,"endOffset":1752,"count":1},{"startOffset":1714,"endOffset":1749,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1611,"endOffset":1651,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1626,"endOffset":1650,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1666,"endOffset":1699,"count":4}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":2515,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":6503,"endOffset":6601,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":10233,"endOffset":10436,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":10726,"endOffset":10844,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":11146,"endOffset":11268,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":11621,"endOffset":12056,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":14330,"endOffset":14615,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":15799,"endOffset":15945,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":16150,"endOffset":16248,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":20341,"endOffset":20476,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":20709,"endOffset":20843,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":21136,"endOffset":21274,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":21569,"endOffset":21707,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":21981,"endOffset":22059,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":25860,"endOffset":26016,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":26813,"endOffset":26979,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":29150,"endOffset":29314,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":36085,"endOffset":36249,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":38753,"endOffset":38993,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":40186,"endOffset":40293,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":40854,"endOffset":40944,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":41935,"endOffset":42016,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":42982,"endOffset":43175,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":44340,"endOffset":44425,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":45187,"endOffset":45285,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":45690,"endOffset":45788,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":46499,"endOffset":46693,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":47252,"endOffset":47416,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":48010,"endOffset":48174,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":50589,"endOffset":50687,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":51096,"endOffset":51253,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":54645,"endOffset":55006,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":55228,"endOffset":55452,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":55745,"endOffset":55939,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":56183,"endOffset":56722,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":56929,"endOffset":57468,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":58004,"endOffset":58171,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":58696,"endOffset":58922,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":60581,"endOffset":60867,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":61223,"endOffset":61318,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":61516,"endOffset":61679,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":61906,"endOffset":62042,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":62232,"endOffset":62397,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":62658,"endOffset":62809,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":63339,"endOffset":63500,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":65490,"endOffset":65570,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":66100,"endOffset":66181,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":69987,"endOffset":71130,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":73639,"endOffset":73747,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":74522,"endOffset":75033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/config/lib/definitions/definition.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6925,"count":1}],"isBlockCoverage":true},{"functionName":"Definition","ranges":[{"startOffset":748,"endOffset":1426,"count":155},{"startOffset":978,"endOffset":1047,"count":131},{"startOffset":1080,"endOffset":1142,"count":154},{"startOffset":1213,"endOffset":1350,"count":138},{"startOffset":1248,"endOffset":1290,"count":12},{"startOffset":1290,"endOffset":1343,"count":126},{"startOffset":1373,"endOffset":1421,"count":152}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1432,"endOffset":1890,"count":155},{"startOffset":1479,"endOffset":1620,"count":620},{"startOffset":1542,"endOffset":1613,"count":0},{"startOffset":1641,"endOffset":1705,"count":0},{"startOffset":1750,"endOffset":1885,"count":988},{"startOffset":1789,"endOffset":1878,"count":0}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":1965,"endOffset":2626,"count":0}],"isBlockCoverage":false},{"functionName":"describeUsage","ranges":[{"startOffset":2655,"endOffset":4205,"count":152},{"startOffset":2733,"endOffset":3044,"count":107},{"startOffset":2755,"endOffset":2793,"count":15},{"startOffset":2826,"endOffset":2850,"count":59},{"startOffset":2852,"endOffset":2897,"count":14},{"startOffset":2897,"endOffset":2945,"count":93},{"startOffset":2979,"endOffset":3021,"count":48},{"startOffset":3044,"endOffset":3089,"count":45},{"startOffset":3089,"endOffset":3135,"count":4},{"startOffset":3135,"endOffset":3523,"count":45},{"startOffset":3523,"endOffset":3545,"count":5},{"startOffset":3545,"endOffset":3615,"count":40},{"startOffset":3615,"endOffset":3723,"count":13},{"startOffset":3723,"endOffset":3796,"count":27},{"startOffset":3796,"endOffset":3812,"count":40},{"startOffset":3812,"endOffset":4067,"count":1},{"startOffset":4067,"endOffset":4128,"count":40},{"startOffset":4128,"endOffset":4172,"count":8},{"startOffset":4172,"endOffset":4202,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3450,"endOffset":3497,"count":128},{"startOffset":3466,"endOffset":3480,"count":98},{"startOffset":3481,"endOffset":3497,"count":90}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3586,"endOffset":3612,"count":78}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3698,"endOffset":3704,"count":46}],"isBlockCoverage":true},{"functionName":"describeType","ranges":[{"startOffset":4230,"endOffset":5519,"count":270},{"startOffset":4268,"endOffset":4873,"count":45},{"startOffset":4592,"endOffset":4614,"count":41},{"startOffset":4615,"endOffset":4619,"count":4},{"startOffset":4664,"endOffset":4673,"count":14},{"startOffset":4674,"endOffset":4682,"count":31},{"startOffset":4797,"endOffset":4829,"count":8},{"startOffset":4830,"endOffset":4834,"count":37},{"startOffset":4873,"endOffset":5104,"count":225},{"startOffset":5104,"endOffset":5139,"count":41},{"startOffset":5145,"endOffset":5180,"count":15},{"startOffset":5186,"endOffset":5263,"count":1},{"startOffset":5269,"endOffset":5306,"count":68},{"startOffset":5312,"endOffset":5343,"count":1},{"startOffset":5349,"endOffset":5380,"count":9},{"startOffset":5386,"endOffset":5428,"count":2},{"startOffset":5434,"endOffset":5463,"count":5},{"startOffset":5469,"endOffset":5511,"count":83}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4308,"endOffset":4324,"count":124}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4330,"endOffset":4350,"count":116}],"isBlockCoverage":true},{"functionName":"describeValue","ranges":[{"startOffset":5610,"endOffset":5678,"count":214},{"startOffset":5642,"endOffset":5663,"count":83},{"startOffset":5664,"endOffset":5677,"count":131}],"isBlockCoverage":true},{"functionName":"unindent","ranges":[{"startOffset":5699,"endOffset":5928,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":5945,"endOffset":6274,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAll","ranges":[{"startOffset":6294,"endOffset":6892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/ci-info/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2458,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181,"endOffset":223,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":292,"endOffset":1341,"count":50},{"startOffset":354,"endOffset":366,"count":2},{"startOffset":367,"endOffset":381,"count":48},{"startOffset":529,"endOffset":694,"count":0},{"startOffset":700,"endOffset":1239,"count":0},{"startOffset":1245,"endOffset":1333,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":409,"endOffset":456,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1042,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"checkEnv","ranges":[{"startOffset":1894,"endOffset":2456,"count":50},{"startOffset":1974,"endOffset":1991,"count":45},{"startOffset":1991,"endOffset":2088,"count":5},{"startOffset":2088,"endOffset":2270,"count":1},{"startOffset":2270,"endOffset":2292,"count":4},{"startOffset":2292,"endOffset":2369,"count":1},{"startOffset":2369,"endOffset":2455,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2319,"endOffset":2363,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2403,"endOffset":2452,"count":3}],"isBlockCoverage":true}]},{"scriptId":"133","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/read-package-json-fast/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3793,"count":1}],"isBlockCoverage":true},{"functionName":"rpj","ranges":[{"startOffset":259,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":365,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":377,"endOffset":423,"count":0}],"isBlockCoverage":false},{"functionName":"readBinDir","ranges":[{"startOffset":501,"endOffset":948,"count":1},{"startOffset":542,"endOffset":565,"count":0},{"startOffset":598,"endOffset":621,"count":0},{"startOffset":632,"endOffset":656,"count":0},{"startOffset":681,"endOffset":947,"count":0}],"isBlockCoverage":true},{"functionName":"walkBinDir","ranges":[{"startOffset":971,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"stripUnderscores","ranges":[{"startOffset":1614,"endOffset":1736,"count":1},{"startOffset":1690,"endOffset":1718,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1670,"endOffset":1687,"count":1}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":1758,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"addId","ranges":[{"startOffset":1968,"endOffset":2083,"count":1},{"startOffset":1995,"endOffset":2010,"count":0},{"startOffset":2012,"endOffset":2065,"count":0}],"isBlockCoverage":true},{"functionName":"pruneRepeatedOptionals","ranges":[{"startOffset":2400,"endOffset":2696,"count":1},{"startOffset":2482,"endOffset":2487,"count":0},{"startOffset":2498,"endOffset":2523,"count":0},{"startOffset":2525,"endOffset":2604,"count":0},{"startOffset":2642,"endOffset":2678,"count":0}],"isBlockCoverage":true},{"functionName":"fixBundled","ranges":[{"startOffset":2719,"endOffset":3304,"count":1},{"startOffset":2832,"endOffset":2857,"count":0},{"startOffset":2881,"endOffset":2921,"count":0},{"startOffset":2944,"endOffset":3018,"count":0},{"startOffset":3031,"endOffset":3056,"count":0},{"startOffset":3058,"endOffset":3201,"count":0}],"isBlockCoverage":true},{"functionName":"fixScripts","ranges":[{"startOffset":3327,"endOffset":3611,"count":1},{"startOffset":3358,"endOffset":3393,"count":0},{"startOffset":3443,"endOffset":3610,"count":0}],"isBlockCoverage":true},{"functionName":"fixFunding","ranges":[{"startOffset":3634,"endOffset":3767,"count":1},{"startOffset":3664,"endOffset":3699,"count":0},{"startOffset":3701,"endOffset":3749,"count":0}],"isBlockCoverage":true}]},{"scriptId":"134","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/json-parse-even-better-errors/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4240,"count":1}],"isBlockCoverage":true},{"functionName":"hexify","ranges":[{"startOffset":716,"endOffset":834,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":1033,"endOffset":1070,"count":1}],"isBlockCoverage":true},{"functionName":"makeParsedError","ranges":[{"startOffset":1098,"endOffset":1196,"count":0}],"isBlockCoverage":false},{"functionName":"parseError","ranges":[{"startOffset":1219,"endOffset":2256,"count":0}],"isBlockCoverage":false},{"functionName":"JSONParseError","ranges":[{"startOffset":2306,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":2592,"endOffset":2644,"count":0}],"isBlockCoverage":false},{"functionName":"set name","ranges":[{"startOffset":2650,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2671,"endOffset":2739,"count":0}],"isBlockCoverage":false},{"functionName":"parseJson","ranges":[{"startOffset":2764,"endOffset":3498,"count":1},{"startOffset":3356,"endOffset":3373,"count":0},{"startOffset":3406,"endOffset":3424,"count":0},{"startOffset":3456,"endOffset":3473,"count":0}],"isBlockCoverage":true},{"functionName":"parseJsonError","ranges":[{"startOffset":3525,"endOffset":4006,"count":1},{"startOffset":3633,"endOffset":4003,"count":0}],"isBlockCoverage":true},{"functionName":"parseJsonError.noExceptions","ranges":[{"startOffset":4121,"endOffset":4238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/npm-normalize-package-bin/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1410,"count":1}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":170,"endOffset":387,"count":1},{"startOffset":209,"endOffset":387,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":415,"endOffset":546,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArray","ranges":[{"startOffset":573,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"removeBin","ranges":[{"startOffset":731,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeObject","ranges":[{"startOffset":802,"endOffset":1378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/map-workspaces/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7070,"count":1}],"isBlockCoverage":true},{"functionName":"appendNegatedPatterns","ranges":[{"startOffset":212,"endOffset":1891,"count":1},{"startOffset":348,"endOffset":1550,"count":0},{"startOffset":1717,"endOffset":1848,"count":0}],"isBlockCoverage":true},{"functionName":"getPatterns","ranges":[{"startOffset":1895,"endOffset":2285,"count":1},{"startOffset":2011,"endOffset":2032,"count":0},{"startOffset":2101,"endOffset":2225,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageName","ranges":[{"startOffset":2289,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"pkgPathmame","ranges":[{"startOffset":2397,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"getGlobPattern","ranges":[{"startOffset":2614,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"getError","ranges":[{"startOffset":2765,"endOffset":2878,"count":0}],"isBlockCoverage":false},{"functionName":"reverseResultMap","ranges":[{"startOffset":2882,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"mapWorkspaces","ranges":[{"startOffset":2981,"endOffset":5436,"count":1},{"startOffset":3051,"endOffset":3171,"count":0},{"startOffset":3414,"endOffset":5435,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobOpts","ranges":[{"startOffset":3440,"endOffset":3649,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3743,"endOffset":3767,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3843,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4090,"endOffset":4188,"count":0}],"isBlockCoverage":false},{"functionName":"addDuplicateErrorMessages","ranges":[{"startOffset":5440,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"mapWorkspaces.virtual","ranges":[{"startOffset":5773,"endOffset":7034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/@npmcli/name-from-folder/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":65,"endOffset":139,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":160,"endOffset":230,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41548,"count":1},{"startOffset":3340,"endOffset":3349,"count":0},{"startOffset":3507,"endOffset":3523,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":71,"endOffset":154,"count":1},{"startOffset":124,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":740,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1188,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1270,"endOffset":1301,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1333,"endOffset":1448,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1483,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1640,"endOffset":1684,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1714,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1816,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1912,"endOffset":1955,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1978,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2098,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2325,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2549,"endOffset":2681,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2703,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2859,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2990,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4209,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4371,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4429,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6417,"endOffset":6830,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":7593,"endOffset":7660,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7747,"endOffset":7976,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":8145,"endOffset":8197,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8216,"endOffset":40787,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40944,"endOffset":40980,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41095,"endOffset":41137,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":41258,"endOffset":41304,"count":1}],"isBlockCoverage":true}]},{"scriptId":"139","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5191,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":308,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":424,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":671,"endOffset":906,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1076,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1571,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2167,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2222,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2281,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2324,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2369,"endOffset":5187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1281,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":43,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":387,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":504,"endOffset":1279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":183,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23412,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":323,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":1111,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1582,"endOffset":23359,"count":0}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5914,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1024,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":1124,"endOffset":1176,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1264,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1656,"endOffset":5832,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":996,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":711,"endOffset":927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":565,"endOffset":926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2927,"count":1}],"isBlockCoverage":true},{"functionName":"globStreamSync","ranges":[{"startOffset":514,"endOffset":628,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":672,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":814,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":952,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1059,"endOffset":1175,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1221,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1901,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2017,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2170,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2331,"endOffset":2378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8471,"count":1},{"startOffset":554,"endOffset":563,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":643,"endOffset":8415,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/path-scurry/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68057,"count":1},{"startOffset":415,"endOffset":499,"count":0},{"startOffset":678,"endOffset":722,"count":0},{"startOffset":67610,"endOffset":67621,"count":0},{"startOffset":67935,"endOffset":68021,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89,"endOffset":413,"count":106},{"startOffset":236,"endOffset":251,"count":8},{"startOffset":252,"endOffset":288,"count":98},{"startOffset":268,"endOffset":288,"count":5},{"startOffset":291,"endOffset":369,"count":101}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":332,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":418,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":583,"endOffset":676,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":680,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":776,"endOffset":1062,"count":1},{"startOffset":825,"endOffset":836,"count":0},{"startOffset":900,"endOffset":1001,"count":106}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2243,"endOffset":2507,"count":0}],"isBlockCoverage":false},{"functionName":"uncToDrive","ranges":[{"startOffset":2620,"endOffset":2695,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3851,"endOffset":4284,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":4373,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeNocase","ranges":[{"startOffset":4603,"endOffset":4784,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":4933,"endOffset":4985,"count":0}],"isBlockCoverage":false},{"functionName":"ChildrenCache","ranges":[{"startOffset":5932,"endOffset":6108,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6791,"endOffset":39243,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":39485,"endOffset":41392,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41553,"endOffset":42477,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":42865,"endOffset":64499,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64772,"endOffset":65877,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":66192,"endOffset":66889,"count":0}],"isBlockCoverage":true},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":67209,"endOffset":67344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"149","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/lru-cache/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52432,"count":1},{"startOffset":273,"endOffset":279,"count":0},{"startOffset":400,"endOffset":404,"count":0},{"startOffset":763,"endOffset":2376,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":451,"endOffset":634,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":811,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1039,"endOffset":1544,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1658,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2419,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2496,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"getUintArray","ranges":[{"startOffset":3076,"endOffset":3403,"count":0}],"isBlockCoverage":false},{"functionName":"ZeroArray","ranges":[{"startOffset":3465,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"<static_initializer>","ranges":[{"startOffset":3553,"endOffset":4320,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3553,"endOffset":4320,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4732,"endOffset":52367,"count":0}],"isBlockCoverage":true}]},{"scriptId":"150","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1115,"count":1}],"isBlockCoverage":false}]},{"scriptId":"151","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3412,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":703,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":810,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1186,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":1295,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1419,"endOffset":1537,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1543,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1664,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1923,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2385,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2646,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2765,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":3032,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7668,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":856,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1082,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1216,"endOffset":1355,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1361,"endOffset":1527,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1533,"endOffset":1672,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1678,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1843,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":2000,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":2153,"endOffset":2305,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2311,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2503,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2691,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2876,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":3057,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3265,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3464,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3631,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3800,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3945,"endOffset":4096,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":4102,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4259,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4525,"endOffset":5491,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6388,"endOffset":6997,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":7069,"endOffset":7587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17335,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2721,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2996,"endOffset":3344,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3348,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3787,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"performanceObserverSorter","ranges":[{"startOffset":4220,"endOffset":4289,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4334,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4574,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4722,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":5041,"endOffset":5548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6204,"endOffset":9904,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10405,"endOffset":10614,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10680,"endOffset":11735,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":12032,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":13419,"endOffset":13696,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13700,"endOffset":13767,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13771,"endOffset":14386,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":14390,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":15260,"endOffset":16412,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":16453,"endOffset":16575,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16581,"endOffset":16696,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16700,"endOffset":17029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6505,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1186,"endOffset":1652,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1708,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2468,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2582,"endOffset":2773,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3037,"endOffset":3346,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3352,"endOffset":3463,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3676,"endOffset":3887,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3891,"endOffset":4037,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":4041,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5677,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":6128,"endOffset":6392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3676,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":762,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1461,"endOffset":1559,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1682,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1905,"endOffset":2004,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2129,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2351,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2581,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2873,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3129,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6561,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1342,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1410,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1723,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1967,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2188,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2417,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2554,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2824,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3094,"endOffset":3321,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3327,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3624,"endOffset":3723,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3729,"endOffset":4053,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":4059,"endOffset":4188,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4194,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":6092,"endOffset":6266,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":6150,"endOffset":6244,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6314,"endOffset":6457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1587,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":163,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":469,"endOffset":1501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2389,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":646,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":1041,"endOffset":2357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8862,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":944,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1089,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1723,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1911,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":2111,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2295,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2491,"endOffset":2618,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2675,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2871,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":3057,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":3249,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3453,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3663,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":4097,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4535,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4799,"endOffset":5006,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":5048,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5174,"endOffset":5335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5341,"endOffset":5403,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5409,"endOffset":5676,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5732,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5979,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6306,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6522,"endOffset":6801,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6807,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6984,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram","ranges":[{"startOffset":7053,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedHistogram.<computed>","ranges":[{"startOffset":7316,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram","ranges":[{"startOffset":7330,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedRecordableHistogram.<computed>","ranges":[{"startOffset":7711,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"createRecordableHistogram","ranges":[{"startOffset":7725,"endOffset":7821,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7974,"endOffset":8676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1840,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":665,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":773,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1036,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1358,"endOffset":1795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minipass/dist/commonjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34763,"count":1},{"startOffset":382,"endOffset":438,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":71,"endOffset":154,"count":1},{"startOffset":124,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":734,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1057,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1443,"endOffset":1600,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2912,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2965,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2997,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3087,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3300,"endOffset":3351,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3457,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4183,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4292,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4497,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4547,"endOffset":4610,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5022,"endOffset":34698,"count":0}],"isBlockCoverage":true}]},{"scriptId":"162","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7516,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":246,"endOffset":268,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobList","ranges":[{"startOffset":290,"endOffset":312,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":420,"endOffset":7451,"count":0}],"isBlockCoverage":true}]},{"scriptId":"163","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12681,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":420,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":696,"endOffset":10238,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10304,"endOffset":11481,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11551,"endOffset":12611,"count":0}],"isBlockCoverage":true}]},{"scriptId":"164","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4388,"count":1},{"startOffset":544,"endOffset":553,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":622,"endOffset":4326,"count":0}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11073,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":386,"endOffset":965,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1247,"endOffset":1696,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1854,"endOffset":2683,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2906,"endOffset":11002,"count":0}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":763,"endOffset":1014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":70364,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1729,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4311,"endOffset":4319,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4743,"endOffset":4839,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4843,"endOffset":5242,"count":1},{"startOffset":5015,"endOffset":5037,"count":0},{"startOffset":5074,"endOffset":5241,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5248,"endOffset":5389,"count":3},{"startOffset":5344,"endOffset":5363,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5395,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5693,"endOffset":5799,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6037,"endOffset":6454,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6458,"endOffset":6535,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6539,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6662,"endOffset":6767,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6771,"endOffset":6966,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7472,"endOffset":8231,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":8307,"endOffset":8932,"count":2},{"startOffset":8674,"endOffset":8924,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8936,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":9548,"endOffset":14322,"count":2},{"startOffset":9609,"endOffset":9636,"count":0},{"startOffset":9665,"endOffset":9800,"count":0},{"startOffset":9870,"endOffset":10126,"count":0},{"startOffset":10189,"endOffset":10393,"count":0},{"startOffset":10974,"endOffset":11000,"count":0},{"startOffset":11419,"endOffset":12814,"count":1},{"startOffset":12073,"endOffset":12111,"count":0},{"startOffset":12191,"endOffset":12202,"count":0},{"startOffset":12386,"endOffset":12431,"count":0},{"startOffset":12904,"endOffset":12982,"count":0},{"startOffset":12983,"endOffset":13030,"count":0},{"startOffset":13032,"endOffset":13255,"count":0},{"startOffset":13806,"endOffset":14080,"count":1},{"startOffset":13840,"endOffset":14014,"count":0},{"startOffset":14046,"endOffset":14075,"count":0},{"startOffset":14106,"endOffset":14160,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14500,"endOffset":14635,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":14760,"endOffset":15405,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15410,"endOffset":15562,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15774,"endOffset":16302,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16389,"endOffset":16908,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16945,"endOffset":17337,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17376,"endOffset":18008,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":18042,"endOffset":18088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18179,"endOffset":18225,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18310,"endOffset":18368,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18486,"endOffset":18812,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18907,"endOffset":18991,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19084,"endOffset":19131,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":19143,"endOffset":19400,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":19495,"endOffset":19827,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":19857,"endOffset":20017,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":20057,"endOffset":20421,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20451,"endOffset":20800,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":20833,"endOffset":21023,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":21054,"endOffset":21246,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":21297,"endOffset":21400,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":21437,"endOffset":21592,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":21627,"endOffset":23193,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":23224,"endOffset":23327,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":23364,"endOffset":23671,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23676,"endOffset":23865,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23894,"endOffset":23987,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":24022,"endOffset":24090,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":24124,"endOffset":24190,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":24222,"endOffset":24284,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":24324,"endOffset":24609,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24644,"endOffset":24711,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24744,"endOffset":24805,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24838,"endOffset":24903,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24946,"endOffset":24995,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":25033,"endOffset":25979,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":26013,"endOffset":26083,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":26116,"endOffset":26199,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":26397,"endOffset":26503,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":26537,"endOffset":27500,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":27508,"endOffset":28325,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":28331,"endOffset":30496,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":30502,"endOffset":33536,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":33567,"endOffset":35223,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":35268,"endOffset":35429,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":35434,"endOffset":35589,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":35593,"endOffset":39652,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":39656,"endOffset":43870,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":43874,"endOffset":43935,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":43964,"endOffset":44162,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":44194,"endOffset":44398,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":44405,"endOffset":46153,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":46157,"endOffset":46584,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":46588,"endOffset":47127,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":47131,"endOffset":48488,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":48492,"endOffset":49000,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":49004,"endOffset":49449,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":49453,"endOffset":51118,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":51234,"endOffset":51299,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":51370,"endOffset":52878,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":52882,"endOffset":55310,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":55381,"endOffset":55445,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":55451,"endOffset":55570,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":55576,"endOffset":57206,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":57238,"endOffset":61603,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":61608,"endOffset":62167,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62253,"endOffset":62298,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":62379,"endOffset":62684,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":62689,"endOffset":64665,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":64822,"endOffset":65610,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":65642,"endOffset":66570,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":66614,"endOffset":66739,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":66783,"endOffset":67182,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":67189,"endOffset":67275,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":67337,"endOffset":67509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67738,"endOffset":67774,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":67779,"endOffset":67820,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":67905,"endOffset":67936,"count":19}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":67941,"endOffset":67977,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":68019,"endOffset":68267,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":68295,"endOffset":68400,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":68430,"endOffset":68536,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":68686,"endOffset":69375,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":69416,"endOffset":69664,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":69800,"endOffset":69905,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":69910,"endOffset":70035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7452,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1095,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1246,"endOffset":2134,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":2138,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2858,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":3111,"endOffset":3773,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3777,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3992,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":4313,"endOffset":6320,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6324,"endOffset":7229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10199,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":826,"endOffset":1223,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":874,"endOffset":912,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":920,"endOffset":1040,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1046,"endOffset":1096,"count":2},{"startOffset":1083,"endOffset":1088,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1102,"endOffset":1158,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1164,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1227,"endOffset":1437,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1441,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1821,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1877,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2305,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2485,"endOffset":2772,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2778,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2956,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3172,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3223,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3549,"endOffset":3901,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3927,"endOffset":4074,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4087,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4282,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4376,"endOffset":4415,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4421,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4523,"endOffset":4562,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4568,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":4620,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4638,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4772,"endOffset":5047,"count":2},{"startOffset":4852,"endOffset":4867,"count":0},{"startOffset":4902,"endOffset":4929,"count":0},{"startOffset":4931,"endOffset":5013,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":5051,"endOffset":5143,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":5147,"endOffset":5243,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":5247,"endOffset":5387,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5486,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannelFrom","ranges":[{"startOffset":5636,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":6205,"endOffset":6437,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":6443,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6665,"endOffset":6823,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6829,"endOffset":7074,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":7080,"endOffset":7611,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7617,"endOffset":8843,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8849,"endOffset":9982,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9989,"endOffset":10079,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":35,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":260,"endOffset":527,"count":2},{"startOffset":333,"endOffset":394,"count":0},{"startOffset":421,"endOffset":521,"count":1},{"startOffset":514,"endOffset":520,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":532,"endOffset":1126,"count":1},{"startOffset":703,"endOffset":707,"count":0},{"startOffset":764,"endOffset":768,"count":0},{"startOffset":825,"endOffset":829,"count":0},{"startOffset":887,"endOffset":891,"count":0},{"startOffset":946,"endOffset":950,"count":0},{"startOffset":1006,"endOffset":1010,"count":0},{"startOffset":1064,"endOffset":1068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"171","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5235,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1595,"endOffset":1704,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1708,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2352,"endOffset":2575,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2580,"endOffset":3583,"count":1},{"startOffset":2651,"endOffset":2678,"count":0},{"startOffset":2717,"endOffset":2746,"count":0},{"startOffset":2832,"endOffset":2879,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3885,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4392,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4573,"endOffset":4722,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4759,"endOffset":4901,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4944,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":5123,"endOffset":5175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6722,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2629,"endOffset":3102,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3265,"endOffset":6375,"count":1},{"startOffset":3472,"endOffset":3846,"count":0},{"startOffset":4195,"endOffset":4223,"count":0},{"startOffset":4747,"endOffset":4802,"count":0},{"startOffset":4809,"endOffset":5599,"count":0},{"startOffset":5605,"endOffset":5622,"count":0},{"startOffset":5628,"endOffset":5669,"count":0},{"startOffset":5675,"endOffset":5723,"count":0},{"startOffset":5728,"endOffset":5796,"count":0},{"startOffset":5798,"endOffset":6374,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5068,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6158,"endOffset":6211,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6379,"endOffset":6662,"count":0}],"isBlockCoverage":false}]}],"timestamp":555552.972554,"source-map-cache":{"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/walk-up-path/dist/cjs/index.js":{"lineLengths":[14,63,25,32,34,52,20,46,27,19,10,15,23,10,6,3,25,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/index.js":{"lineLengths":[14,73,63,3,63,222,71,72,38,44,48,50,64,41,59,22,6,53,3,31,57,46,78,59,40,29,71,3,43,29,49,3,36,70,78,29,73,24,62,70,43,47,41,14,22,29,61,3,50,44,14,22,29,61,3,44,44,62,3,41,41,62,3,36,27,58,3,39,27,63,3,22,64,42,23,55,25,16,15,26,25,3,21,77,37,42,47,33,50,22,33,27,61,64,46,62,35,46,48,94,25,43,52,28,71,34,6,36,81,30,60,49,51,14,39,67,14,11,42,34,54,56,14,33,53,70,14,11,76,72,84,65,84,94,94,23,36,8,3,29,47,20,22,20,31,36,44,3,34,22,18,49,64,61,61,64,40,26,6,52,3,35,53,42,51,69,69,62,67,3,75,73,70,63,84,25,43,49,48,42,45,28,6,17,3,23,41,32,45,75,18,13,9,13,26,14,12,13,11,29,13,13,15,12,15,14,24,12,41,68,33,32,32,61,52,36,84,41,61,10,74,28,29,44,30,28,42,45,34,53,45,53,27,29,23,40,21,6,17,65,25,10,42,42,46,33,14,10,22,6,20,13,38,38,54,63,33,20,10,24,31,20,10,45,28,33,57,29,62,10,48,72,43,71,61,49,11,76,77,75,72,56,50,28,53,61,54,45,35,63,43,55,29,88,18,36,76,18,14,48,12,39,63,61,52,30,56,39,35,35,52,48,46,32,18,14,10,44,6,62,63,62,65,44,28,66,39,57,64,52,47,22,18,14,10,56,38,69,62,63,10,43,64,58,10,15,59,67,10,26,6,45,43,40,25,64,28,48,25,18,32,46,18,14,26,12,6,55,34,40,50,50,54,32,18,37,82,35,36,22,18,32,28,20,54,12,6,34,37,44,10,34,13,34,48,49,61,40,54,64,34,49,45,44,29,22,18,40,42,61,41,33,18,14,51,24,64,41,66,41,45,29,18,14,32,50,6,46,35,36,54,22,7,69,69,71,58,7,87,40,43,33,7,74,68,38,34,13,34,95,43,29,68,34,54,65,31,22,76,56,36,56,22,46,45,46,39,34,30,37,38,31,38,39,34,22,41,65,41,50,38,43,26,18,52,53,65,44,58,68,38,53,49,48,33,26,22,44,46,65,45,37,22,18,55,28,68,45,70,45,76,60,59,48,44,33,22,18,14,32,26,6,43,59,51,57,7,64,56,39,57,61,108,30,30,40,35,14,10,50,6,45,20,20,25,24,49,35,60,22,22,14,78,36,22,14,78,36,22,14,38,25,64,34,35,34,29,36,22,22,14,38,25,64,34,35,34,29,36,22,22,14,19,30,14,10,71,42,48,6,20,27,20,38,28,30,80,30,28,10,26,56,30,6,52,46,60,56,24,47,38,69,76,31,30,88,42,34,34,35,43,97,48,37,37,38,50,46,65,71,70,60,61,39,37,54,22,42,48,22,18,14,10,69,77,56,38,52,10,57,61,106,41,33,30,39,37,53,34,31,30,14,33,42,57,24,58,31,31,31,25,66,73,42,71,46,19,52,33,32,51,37,36,54,52,50,51,29,33,33,49,67,46,64,43,75,44,44,48,49,74,42,22,33,18,68,34,46,86,74,85,80,42,37,22,27,59,74,49,50,77,80,35,26,64,80,30,22,18,39,84,38,31,39,83,37,37,22,18,37,30,14,39,61,66,21,41,31,55,14,19,33,56,14,22,30,10,61,61,52,59,61,64,61,66,38,50,73,38,65,29,25,10,30,60,62,36,28,10,30,57,65,62,37,53,34,10,15,38,37,10,29,6,20,69,6,21,68,38,21,30,37,28,23,64,67,15,29,43,61,10,54,39,30,46,43,30,40,45,10,50,39,30,42,39,30,36,38,10,55,75,10,51,36,10,79,50,56,69,10,19,6,15,50,32,60,37,11,65,66,52,30,27,33,32,10,38,43,19,26,29,32,60,43,59,79,58,71,44,21,30,42,43,55,38,18,45,38,45,43,34,16,35,40,40,75,28,18,42,75,74,22,27,41,22,18,47,67,18,54,79,50,18,16,69,11,24,72,76,72,37,57,44,57,25,39,14,63,34,10,21,36,33,10,29,28,6,20,60,70,55,51,44,33,10,60,51,44,10,15,35,10,6,39,46,55,26,28,26,10,26,29,10,36,25,10,38,41,30,41,10,54,39,47,67,68,44,48,30,46,83,42,25,68,34,14,10,47,36,27,61,35,14,63,23,42,33,18,37,14,10,68,39,34,26,10,28,6,27,58,6,2,31,22,36,104,42,113,46,119,21,38,41,47,53,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/assert-valid-pattern.js":{"lineLengths":[14,63,37,38,42,39,48,6,47,52,6,3,49,48],"data":null,"url":"assert-valid-pattern.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/ast.js":{"lineLengths":[14,31,63,22,66,48,50,43,66,65,43,72,54,30,72,70,70,45,59,39,47,75,33,22,33,27,75,39,34,74,60,12,10,11,15,20,17,13,18,11,25,14,15,55,44,23,46,26,43,18,35,31,63,77,66,53,35,75,6,21,30,42,35,29,39,39,26,38,48,10,81,31,6,32,17,42,35,26,80,10,15,37,84,10,6,18,30,33,57,30,25,29,49,25,33,15,41,32,26,82,23,32,25,90,51,46,56,77,26,45,51,22,18,24,32,14,10,21,6,21,33,26,26,34,86,55,14,33,33,10,6,15,39,85,64,42,29,28,36,75,26,10,20,6,16,33,25,59,38,26,37,25,82,32,54,36,59,30,14,10,21,6,14,33,25,40,25,36,26,24,42,51,30,66,29,45,6,19,38,29,13,41,6,20,46,39,25,10,18,6,43,30,29,29,30,33,66,25,26,37,43,76,43,46,42,30,30,18,31,48,54,45,26,22,81,41,22,30,30,18,38,36,36,38,30,30,18,79,35,30,49,57,35,30,18,26,14,27,22,10,49,32,25,39,26,22,33,39,72,39,42,38,26,26,14,27,44,50,41,22,18,77,37,18,26,26,14,34,32,32,34,26,26,14,61,32,26,46,32,53,26,14,29,32,26,34,43,26,14,29,61,42,18,32,26,42,26,14,22,10,30,75,42,25,35,47,18,6,45,55,49,20,6,73,22,20,41,30,33,45,29,38,67,72,76,47,37,30,37,50,60,25,25,10,78,61,22,25,12,6,20,30,6,74,74,78,75,74,77,73,63,7,44,33,61,44,51,15,33,17,7,72,29,54,35,67,44,51,15,53,22,7,79,80,80,20,7,77,65,70,33,67,50,57,7,76,69,7,75,42,7,79,80,7,23,52,49,76,7,82,79,75,43,7,78,73,47,7,32,75,74,76,31,53,33,30,26,60,36,28,71,65,50,61,52,27,15,27,28,34,58,84,68,85,68,101,43,53,79,45,43,80,59,75,81,77,82,84,69,87,93,22,18,14,74,26,32,42,46,35,14,45,21,23,50,53,29,15,10,74,74,45,65,32,63,45,76,80,40,39,31,30,40,84,10,44,73,17,41,39,33,10,30,57,10,63,24,51,78,10,15,44,68,27,82,31,28,36,26,40,31,62,34,66,39,51,42,10,17,19,47,49,25,11,6,26,27,24,60,34,41,65,14,33,78,69,48,23,11,67,24,6,57,30,21,27,48,38,28,34,59,26,14,30,45,34,18,23,37,18,26,14,29,107,32,31,48,39,50,30,18,14,29,45,39,21,32,33,26,14,29,29,33,26,14,35,10,75,6,2,19,31],"data":null,"url":"ast.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/brace-expressions.js":{"lineLengths":[14,73,41,63,29,63,23,49,42,51,39,36,36,47,36,35,35,50,36,55,40,3,64,20,59,38,75,61,52,64,67,68,42,66,30,41,26,26,36,54,6,25,23,21,21,26,23,26,24,22,25,37,34,57,27,17,22,10,50,28,19,10,25,26,29,33,21,26,14,71,10,38,73,80,47,68,38,71,22,37,29,41,25,43,40,36,18,14,10,57,26,26,67,32,34,77,14,41,45,14,29,17,22,10,46,71,44,47,20,22,10,43,28,20,22,10,61,37,13,6,22,63,56,38,6,69,71,42,55,6,78,75,78,75,29,31,36,19,76,62,6,78,74,46,44,24,22,21,46,3,33,45],"data":null,"url":"brace-expressions.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/unescape.js":{"lineLengths":[14,63,27,4,65,3,73,78,73,67,3,71,34,3,78,17,4,66,32,44,86,3,29,36],"data":null,"url":"unescape.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minimatch/dist/commonjs/escape.js":{"lineLengths":[14,63,25,4,50,3,74,76,75,76,74,4,64,61,65,59,32,42,45,3,25,34],"data":null,"url":"escape.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/index.js":{"lineLengths":[14,63,299,42,40,50,49,62,2,41,45,58,2,33,43,60,2,29,46,56,2,50,63,2,43,46,59,2,35,66,37,70,39,47,27,4,41,28,30,4,22,40,113,117,38,107,48,120,21,38,17,14,24,16,28,20,36,17,30,21,38,26,39,32,36,4,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAuBzC,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AALD,wCAKC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AALD,gCAKC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AALD,4BAKC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AALD,0CAKC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AALD,kCAKC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEF,qBAAqB;AACrB,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AACzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AAWjB,oBAAoB;AAEP,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\nexport type {\n  Path,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n  WalkOptions,\n  FSOption,\n} from 'path-scurry'\n\n/* c8 ignore stop */\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/glob.js":{"lineLengths":[14,63,23,42,46,30,46,44,45,49,55,15,41,23,15,4,55,4,13,14,9,10,9,17,12,12,19,10,15,14,13,12,11,11,16,13,14,14,12,10,12,26,19,8,48,8,10,8,61,8,14,8,66,7,62,7,63,72,38,7,72,14,8,33,30,19,58,29,51,35,37,31,47,35,33,25,27,10,78,59,10,35,31,51,39,35,41,39,45,43,24,74,33,35,65,75,10,43,33,10,36,43,51,41,63,10,30,35,72,14,77,10,32,58,58,27,39,45,54,85,14,10,15,53,48,45,53,36,56,52,49,37,29,16,10,42,71,67,70,43,89,22,48,21,27,39,35,33,29,29,31,28,34,37,61,38,11,78,63,35,41,24,22,51,36,34,20,59,33,71,12,6,19,75,74,80,47,17,83,30,53,62,32,41,37,24,11,6,17,17,76,30,53,62,32,41,37,27,11,6,15,76,26,49,58,28,37,33,21,6,19,76,26,49,58,28,37,33,25,6,8,65,34,8,20,53,6,26,35,6,8,72,34,8,16,54,6,31,31,6,2,21,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/path-scurry/dist/commonjs/index.js":{"lineLengths":[14,98,34,54,89,69,6,40,30,34,18,5,97,73,22,22,4,67,43,21,142,37,19,3,63,254,42,32,30,46,28,47,58,47,43,40,20,31,27,35,37,18,16,33,37,39,39,7,3,59,96,16,8,22,21,20,35,42,11,7,40,49,96,48,28,58,22,22,22,22,22,22,23,21,28,28,65,41,34,39,67,34,58,65,33,75,30,38,39,38,49,35,36,12,22,16,29,20,36,24,36,28,35,33,37,36,39,32,34,27,37,11,18,35,30,14,3,40,33,43,11,18,42,36,14,3,4,66,13,4,50,20,29,6,2,37,73,80,74,80,79,78,76,77,3,79,71,4,42,13,4,51,39,16,21,33,48,12,6,2,39,48,4,49,79,3,79,75,76,20,3,76,76,17,4,17,8,33,7,74,75,81,75,46,8,10,8,54,7,17,8,10,8,60,7,17,8,11,8,80,7,17,8,12,8,72,17,8,12,37,9,20,10,16,26,6,11,17,27,6,12,18,28,6,10,16,26,6,10,16,26,6,11,17,27,6,14,20,30,6,10,16,26,6,11,17,27,6,13,19,29,6,14,20,30,6,14,20,30,6,14,20,30,6,18,24,34,6,12,18,28,6,12,18,28,6,12,18,28,6,16,22,32,6,16,12,15,20,15,20,11,15,17,15,8,70,74,74,73,60,8,17,49,6,8,80,68,7,17,8,77,26,76,38,30,28,34,35,40,40,50,35,27,40,10,15,46,10,6,8,59,7,66,8,14,39,32,26,38,56,6,8,17,8,22,31,6,8,82,8,20,21,25,10,51,53,51,32,61,44,23,6,30,22,39,31,10,18,6,8,78,81,80,15,7,17,8,17,49,22,27,10,64,44,39,25,6,8,70,7,79,15,7,76,62,7,37,7,17,8,28,51,25,10,33,40,10,26,42,33,40,35,36,41,26,14,10,72,68,35,47,40,44,25,58,21,26,22,12,34,36,10,79,80,31,23,6,8,77,69,8,17,44,35,10,32,31,18,49,10,33,63,6,8,70,45,74,58,8,22,30,36,47,40,32,31,18,65,10,38,58,6,8,58,8,17,44,35,10,32,31,18,49,10,33,60,38,6,8,71,7,78,22,8,22,47,40,30,60,28,59,40,59,14,19,50,14,10,31,40,72,44,6,8,39,7,81,77,46,8,18,48,6,19,36,6,16,32,24,33,30,32,29,44,41,40,37,55,52,55,52,76,51,53,29,6,8,35,8,15,46,6,8,32,8,20,46,6,8,39,8,26,46,6,8,35,8,22,46,6,8,32,8,15,46,6,8,29,8,17,47,6,8,36,8,23,47,6,8,73,28,7,75,48,8,20,61,6,8,76,52,7,81,75,49,8,23,33,6,8,76,57,7,81,75,49,8,23,31,6,8,77,59,7,76,75,68,8,22,42,56,6,8,78,58,7,77,56,8,20,30,25,26,26,50,40,57,40,34,6,8,78,62,8,22,48,6,8,81,75,72,8,17,40,6,8,81,51,7,76,78,57,7,74,17,8,17,28,47,54,6,8,78,7,81,40,7,80,8,23,41,22,27,10,35,30,10,30,73,28,30,10,29,14,76,78,30,56,14,10,21,41,30,10,6,8,45,8,21,41,22,27,10,35,30,10,30,73,28,30,10,29,14,65,76,30,56,14,10,21,41,30,10,6,32,46,38,61,71,35,19,33,10,6,20,38,33,20,59,36,6,28,57,42,34,36,29,10,6,25,35,29,6,64,21,66,67,67,47,30,34,20,29,28,63,55,34,31,34,36,6,30,61,54,33,10,38,32,10,15,45,10,6,28,71,30,34,58,35,30,10,38,33,32,10,6,31,30,28,31,27,70,55,78,30,33,10,26,73,63,30,49,40,10,29,6,29,56,45,6,32,62,35,69,41,68,36,10,26,25,22,6,38,57,33,37,42,37,46,26,14,63,10,6,43,26,60,59,64,26,29,70,72,39,40,25,17,36,26,10,25,18,6,8,79,19,7,79,72,75,7,80,82,17,7,76,16,8,20,43,18,81,29,14,25,42,14,10,6,8,42,8,18,43,18,70,29,14,25,42,14,10,6,21,158,29,33,37,41,33,31,29,33,25,25,25,27,29,33,29,27,27,25,36,52,72,68,35,10,6,23,32,33,41,47,38,47,6,8,80,7,80,20,7,76,16,7,77,77,64,82,77,75,8,40,34,28,30,17,52,20,10,42,36,63,28,29,17,51,20,10,58,36,39,20,10,40,53,55,42,79,22,44,42,14,19,69,29,43,56,18,48,14,76,20,12,6,27,8,47,7,80,20,7,76,16,8,22,34,23,10,42,36,60,10,53,55,42,42,46,10,15,34,37,33,78,18,76,41,22,56,18,48,14,25,44,42,14,52,23,10,56,6,8,44,8,20,34,23,10,42,36,60,10,53,55,42,14,61,37,18,52,14,44,10,21,40,38,10,56,6,19,35,26,40,76,30,71,26,10,29,21,6,35,50,40,31,48,6,8,64,23,7,75,7,80,42,8,23,28,35,63,30,14,74,56,10,20,37,10,6,8,36,8,21,28,35,63,30,14,63,56,10,20,37,10,6,8,67,42,7,17,8,25,29,20,37,21,22,32,28,45,45,26,27,10,45,20,51,37,42,26,10,6,2,29,4,36,3,80,44,4,35,8,46,8,16,8,43,8,26,8,80,68,7,17,8,77,64,6,8,17,8,48,106,6,8,17,8,26,46,6,8,17,8,24,55,43,30,10,71,68,52,54,14,10,48,82,6,8,17,8,51,68,78,34,28,27,34,46,37,6,2,31,4,41,3,37,4,35,8,42,8,20,8,45,8,15,8,80,68,7,17,8,77,64,6,8,17,8,26,48,6,8,17,8,25,26,6,8,17,8,48,106,6,2,31,4,79,41,3,79,78,37,4,23,8,76,8,10,8,79,8,14,8,69,8,11,8,84,8,9,19,24,15,8,52,7,69,8,12,9,8,55,7,77,7,17,8,119,37,63,49,10,62,56,47,42,53,49,54,63,74,71,47,25,10,30,36,87,10,29,30,44,47,30,36,38,33,30,36,29,38,65,66,69,16,29,10,25,6,8,60,8,29,40,43,10,29,6,8,76,54,7,17,8,22,31,6,8,61,7,50,7,79,72,18,8,24,72,73,20,54,32,33,26,37,38,23,14,10,50,36,27,10,55,43,23,6,8,72,73,63,7,50,7,79,72,18,8,29,72,73,20,54,32,33,26,37,38,23,14,10,55,36,27,10,60,48,23,6,8,80,8,33,41,45,10,33,6,8,74,62,8,38,41,45,10,38,6,8,66,8,33,41,45,10,27,6,8,65,8,32,41,45,10,51,6,45,29,9,41,45,10,49,26,30,10,40,35,23,10,15,45,59,10,6,43,29,9,41,45,10,49,26,30,10,47,35,23,10,34,40,10,15,57,10,6,8,71,43,7,79,72,75,7,80,82,17,7,76,16,8,36,41,45,10,30,6,8,48,8,34,41,45,10,34,6,59,30,9,41,45,10,49,49,30,10,42,50,6,57,30,9,41,45,10,49,49,30,10,40,50,6,59,30,9,41,45,10,49,49,30,10,42,50,6,57,30,9,41,45,10,49,49,30,10,40,50,6,46,41,45,10,49,26,30,10,84,28,40,68,10,32,36,27,45,38,26,35,18,37,42,26,33,37,39,30,22,19,43,48,72,22,56,37,73,98,22,27,62,43,26,31,36,26,22,18,37,11,29,43,32,38,24,36,37,30,16,12,6,44,41,45,10,49,26,30,10,84,28,40,68,10,39,34,47,39,44,68,18,27,42,61,34,39,39,18,54,33,18,14,10,24,6,8,31,7,48,7,76,81,77,8,31,31,6,46,77,82,82,41,45,10,49,29,30,10,68,6,8,64,7,52,8,26,35,6,48,41,45,10,49,26,30,10,84,40,60,10,39,34,47,39,44,60,18,27,42,61,34,39,39,18,54,33,18,14,10,6,42,41,45,10,49,26,30,10,84,71,40,69,10,32,31,28,32,32,30,43,28,42,39,28,18,30,31,75,42,28,58,41,51,45,51,54,48,48,83,30,26,47,94,36,26,22,47,59,84,47,30,26,22,34,47,59,62,43,26,22,54,56,22,38,35,22,19,37,33,48,30,14,11,19,24,6,46,41,45,10,49,26,30,10,84,71,32,40,69,10,31,28,32,32,30,43,28,42,39,28,18,30,31,51,43,48,80,43,26,22,18,30,43,31,46,65,38,43,43,22,58,39,22,18,14,44,48,11,19,24,6,29,33,77,36,6,2,41,4,52,3,76,39,4,47,8,45,8,16,50,40,61,30,50,36,10,6,8,17,8,25,81,74,59,59,6,8,17,8,18,118,6,8,67,8,20,87,6,2,43,4,82,3,77,3,44,4,47,8,45,8,15,50,41,60,30,6,8,17,8,26,20,6,8,17,8,18,118,6,8,67,8,20,34,6,2,43,4,69,3,73,12,3,44,4,49,50,40,41,6,2,45,4,69,3,74,4,69,4,75,3,75,66,4,50,22,36,27,27,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/lru-cache/dist/commonjs/index.js":{"lineLengths":[14,4,20,4,63,27,48,19,42,18,12,26,22,75,22,47,46,51,54,3,37,33,22,33,17,29,17,23,16,25,34,36,10,7,17,33,24,30,10,27,24,37,24,25,41,25,40,25,53,28,14,43,10,7,83,35,37,20,40,79,68,72,76,82,82,134,7,2,21,48,29,74,22,41,71,72,72,73,56,28,57,45,11,28,21,33,26,37,30,49,32,28,21,32,24,21,22,6,2,14,10,12,27,34,25,43,22,23,36,43,37,18,6,32,30,36,76,10,29,38,25,6,14,38,6,12,41,6,2,4,62,3,65,73,71,78,26,4,17,76,77,41,10,14,14,19,18,8,40,8,9,8,50,8,19,8,49,8,18,8,51,8,20,8,51,8,20,8,47,8,16,8,51,8,20,8,48,8,17,8,49,8,18,8,52,8,21,8,61,8,30,8,55,8,24,8,59,8,28,8,63,8,32,8,53,8,22,27,11,21,13,14,14,11,11,11,11,11,15,12,13,11,17,21,22,8,62,66,66,7,46,7,17,8,38,17,26,31,27,29,31,33,33,27,27,25,32,15,25,32,15,27,23,63,109,57,55,57,51,11,6,35,8,52,8,16,26,6,8,56,8,20,30,6,8,65,8,27,37,6,8,59,8,17,27,6,8,60,8,24,34,6,8,56,8,20,30,6,8,61,8,25,35,6,27,349,43,77,10,59,26,58,10,25,33,59,48,36,56,107,14,62,76,14,10,41,49,80,10,41,46,34,56,56,41,41,24,24,40,24,34,45,37,10,50,47,33,10,15,44,40,10,44,54,48,42,68,72,64,52,58,39,39,48,92,18,14,48,93,14,44,10,40,56,48,48,29,59,32,21,44,29,24,39,84,14,43,10,52,72,85,10,66,48,36,34,87,63,75,14,10,6,8,59,8,27,53,6,31,47,49,27,31,65,51,31,50,45,48,59,22,29,58,38,31,31,18,37,14,11,41,64,11,47,31,41,45,37,36,28,34,38,52,48,49,14,11,67,40,27,31,34,42,31,81,50,38,31,31,18,37,14,22,11,40,49,39,26,14,37,41,34,33,14,57,30,11,35,37,35,66,11,6,56,32,28,29,25,28,32,48,34,29,42,50,30,11,63,56,67,46,26,14,35,39,65,83,22,50,43,105,22,18,23,92,83,49,18,14,25,11,55,33,33,62,57,39,18,14,50,26,41,67,14,11,6,33,41,56,39,101,10,18,7,55,26,46,46,27,18,55,29,18,40,27,18,23,39,18,14,10,6,56,26,46,46,27,18,55,29,18,40,27,18,23,39,18,14,10,6,27,39,63,6,8,57,64,8,17,43,50,50,62,60,14,10,6,8,57,7,57,64,8,18,44,50,50,62,60,14,10,6,8,58,64,8,14,43,40,35,62,25,14,10,6,8,54,7,58,64,8,15,44,40,35,62,25,14,10,6,8,60,64,8,16,43,40,35,62,40,14,10,6,8,56,7,60,64,8,17,44,40,35,62,40,14,10,6,8,66,32,8,26,31,6,8,99,64,8,39,8,77,72,8,32,43,40,53,41,21,37,26,53,63,14,10,6,8,75,67,70,43,8,32,43,40,53,41,21,37,26,59,10,6,8,75,79,8,33,44,40,53,41,21,37,26,59,10,6,8,71,24,8,19,29,64,36,47,32,14,10,24,6,8,78,75,78,64,8,16,41,29,30,36,49,37,17,33,30,33,42,39,43,32,59,36,42,14,10,27,41,10,22,6,8,76,30,8,13,24,63,42,40,53,41,21,58,26,37,46,43,74,77,58,60,14,31,45,14,39,10,20,6,8,77,74,49,8,16,22,42,31,76,78,78,32,19,77,54,48,14,47,10,6,8,33,7,74,31,8,33,31,28,25,10,141,61,85,54,54,61,26,37,52,14,67,28,25,10,72,35,24,38,29,42,39,47,45,39,38,38,40,44,44,32,26,52,24,36,33,10,15,22,37,49,32,79,75,64,62,48,58,26,53,65,26,22,18,44,44,59,22,49,66,22,18,45,56,42,30,44,79,54,34,48,52,18,14,31,39,14,10,40,43,10,26,32,53,14,24,48,10,74,39,22,43,47,14,10,21,6,8,66,38,8,12,14,33,55,35,52,52,57,22,18,46,32,18,14,10,18,59,43,26,47,51,18,14,10,6,19,33,39,39,66,61,10,62,36,48,14,41,55,14,10,36,68,20,45,45,35,10,32,41,35,10,15,43,10,32,22,21,6,8,76,77,21,7,39,59,8,30,77,43,35,44,46,56,30,14,41,38,48,18,30,40,52,18,29,14,31,38,48,14,10,27,33,10,22,6,8,76,14,7,56,55,8,32,62,43,35,53,20,10,40,77,72,6,51,74,42,22,10,29,36,66,75,31,12,28,31,21,21,11,49,43,77,34,47,56,66,37,65,18,23,57,18,14,59,52,14,82,26,46,39,51,72,22,27,40,22,18,23,40,60,55,18,14,22,11,29,34,53,48,14,34,11,36,43,81,88,77,26,46,86,87,80,27,36,18,47,73,73,72,74,68,18,14,30,79,57,18,48,14,45,26,14,11,38,62,49,74,14,59,59,44,56,49,54,36,70,58,48,22,18,16,11,28,51,51,38,35,37,35,12,35,46,74,41,10,15,39,10,19,6,28,35,26,21,23,36,56,48,6,40,16,23,122,23,144,35,289,37,24,38,33,28,32,36,24,16,10,26,24,28,32,17,28,18,29,25,38,40,36,30,20,20,11,41,35,24,39,73,39,10,15,48,44,46,82,30,47,31,53,18,76,14,80,77,50,45,28,42,41,38,48,18,28,52,26,14,78,34,73,67,53,26,62,41,49,14,75,10,6,8,75,20,7,63,8,30,154,43,35,48,61,24,48,40,28,42,68,33,47,40,22,46,53,59,18,23,34,38,68,53,22,80,18,14,19,28,40,81,82,83,85,54,32,55,18,41,38,48,18,30,14,10,27,33,10,6,21,27,27,6,25,42,45,16,70,51,30,30,24,36,40,48,14,19,69,14,46,32,10,6,8,39,61,8,16,29,32,47,39,32,40,34,18,23,49,52,54,73,22,74,48,61,26,53,68,26,22,44,54,54,48,56,22,53,56,22,27,54,60,54,60,22,34,44,18,14,10,63,39,22,43,47,14,10,24,6,8,59,8,14,68,44,46,65,14,19,48,40,53,18,45,60,18,14,10,30,39,39,42,32,34,10,27,33,10,24,24,31,34,24,55,39,22,43,47,14,10,6,2,29,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/minipass/dist/commonjs/index.js":{"lineLengths":[14,73,63,3,63,88,52,14,8,22,22,7,36,53,52,4,79,41,4,31,29,30,41,38,37,29,4,68,4,33,29,42,36,70,57,33,4,68,4,33,29,42,37,33,33,27,47,42,44,46,33,29,31,41,37,35,35,33,33,33,31,45,41,43,41,43,39,43,31,37,35,37,31,31,35,33,47,39,50,30,80,61,12,33,25,48,28,79,4,63,3,13,4,13,9,10,10,13,35,24,26,26,44,45,6,15,57,6,35,26,25,25,12,23,27,29,6,2,4,68,23,3,13,4,37,15,60,24,6,35,32,57,43,6,2,51,91,4,35,3,59,3,76,56,3,68,42,4,47,23,22,18,19,18,16,13,15,19,27,28,22,28,24,25,14,23,25,25,8,41,8,21,8,38,8,21,8,70,71,52,64,8,27,36,17,17,74,85,10,44,37,35,10,47,47,38,10,15,38,35,10,39,39,65,20,64,61,80,10,64,60,78,10,36,22,35,34,31,14,19,71,14,10,6,8,67,7,63,78,56,74,16,8,25,35,6,8,56,8,21,31,6,8,50,8,25,71,6,8,68,8,24,71,6,8,44,8,23,33,6,8,50,8,26,73,6,8,39,8,22,28,6,8,46,7,79,75,35,8,23,42,6,58,16,30,50,44,6,8,44,8,20,30,6,8,79,35,8,23,33,27,26,23,48,31,142,25,10,46,27,31,10,23,31,50,68,72,43,64,60,44,59,87,14,49,59,44,14,50,89,14,10,59,63,32,33,34,59,35,33,31,42,17,41,42,39,20,24,34,10,57,56,29,42,39,20,24,34,10,71,62,41,65,74,53,50,10,56,53,48,10,74,55,31,27,38,13,37,38,35,16,20,30,6,8,39,7,75,18,7,71,78,67,7,73,32,8,14,29,25,33,40,23,45,36,25,10,30,22,60,80,41,29,32,44,72,15,10,60,32,20,6,23,30,33,15,29,46,37,46,46,39,41,14,19,49,42,41,14,10,34,48,32,22,6,31,43,24,31,10,46,27,31,10,33,41,16,34,26,31,67,38,66,64,44,36,21,6,52,17,29,20,59,36,10,30,30,29,33,27,28,36,13,32,6,8,62,7,80,78,79,77,42,8,15,31,6,8,24,8,14,31,29,33,6,8,54,8,22,32,6,8,72,47,8,20,30,6,8,57,8,19,29,6,26,30,37,13,48,34,6,22,30,37,13,58,37,6,31,63,34,60,32,6,26,34,30,6,8,75,7,34,8,23,29,25,33,41,27,58,30,13,43,47,51,21,26,28,10,15,79,77,47,45,58,29,45,17,32,10,21,6,8,48,7,75,74,74,53,8,19,58,17,44,66,43,18,34,14,17,63,24,10,6,8,37,8,31,37,6,8,65,72,7,69,7,81,58,7,76,79,27,7,78,80,17,8,22,43,29,37,35,57,32,14,10,66,36,10,54,28,41,10,58,31,29,64,17,51,10,20,6,8,38,8,34,38,6,8,46,7,74,77,74,53,8,23,44,74,75,65,29,65,45,36,39,39,14,10,20,6,8,61,7,81,77,80,15,8,29,50,49,37,59,39,14,10,20,6,8,48,8,23,34,6,25,35,34,32,41,25,39,30,36,33,30,36,40,10,6,8,67,72,7,74,73,19,7,75,75,76,72,20,7,73,64,7,80,75,72,7,75,67,8,24,30,75,30,30,32,31,26,10,34,46,24,30,64,44,10,33,36,10,35,33,58,56,30,45,46,24,10,35,40,37,72,44,25,36,24,10,36,46,36,24,10,58,40,41,24,10,36,45,32,20,6,23,39,46,30,10,72,32,20,6,18,31,26,34,31,27,52,32,6,19,29,46,24,47,40,18,38,46,14,10,39,21,10,39,40,20,6,8,75,24,8,22,40,27,12,31,32,61,40,34,31,25,35,44,12,17,20,6,8,79,29,7,42,8,21,32,60,10,42,31,27,51,6,8,65,8,22,50,77,48,45,12,6,8,46,7,75,8,31,71,23,33,29,35,26,28,53,11,29,25,31,37,30,69,27,31,25,24,36,42,40,48,24,28,15,40,42,40,48,30,55,15,34,42,42,48,24,59,15,74,47,30,31,49,43,41,43,16,11,17,18,25,26,39,29,15,11,6,8,39,7,76,45,8,26,71,23,33,29,29,26,35,39,35,28,53,11,29,25,31,39,69,11,32,32,36,17,18,25,26,34,29,15,11,6,8,80,7,71,20,7,77,31,7,71,22,8,18,31,20,40,17,38,25,10,32,32,63,33,32,25,61,24,16,36,62,13,34,21,6,8,34,7,71,7,19,8,28,33,6,2,29,33],"data":null,"url":"index.js.map","sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/pattern.js":{"lineLengths":[14,74,63,26,42,46,43,4,68,11,4,16,18,15,12,12,15,11,17,14,12,17,28,58,43,55,10,37,52,10,54,82,10,42,49,55,10,41,35,29,35,76,33,29,30,36,49,50,56,36,26,32,46,70,67,39,33,35,35,18,58,58,51,48,56,14,60,58,55,39,33,35,35,18,36,36,51,48,56,14,10,6,8,54,8,16,47,6,8,45,8,17,67,6,8,45,8,19,72,6,8,42,8,17,65,6,8,64,8,19,35,32,35,40,80,51,69,6,8,59,8,16,46,6,8,75,8,13,38,31,29,40,102,51,41,45,27,6,8,63,8,14,38,41,26,29,46,41,36,36,49,31,49,30,6,27,27,72,75,50,8,65,8,16,38,43,28,31,46,41,39,49,46,6,43,55,57,8,57,8,19,38,46,31,34,51,38,35,6,8,54,8,13,40,79,16,18,6,8,73,24,8,28,38,34,36,6,8,75,8,27,78,26,38,21,6,2,27,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/walker.js":{"lineLengths":[14,63,69,4,75,12,3,11,4,40,44,50,64,45,28,47,18,4,62,4,17,10,14,10,22,20,21,20,13,10,12,14,40,34,26,26,75,27,58,10,70,28,30,51,29,27,39,58,43,16,10,6,21,71,6,29,56,6,30,14,28,6,15,30,34,20,29,29,28,64,18,10,6,19,34,20,30,28,18,10,15,33,37,10,6,68,45,33,38,30,17,34,62,22,34,21,10,58,50,74,47,34,68,38,14,33,10,46,6,31,20,74,42,54,33,37,39,55,30,16,25,6,31,38,30,17,34,58,22,34,21,10,58,48,74,45,69,36,14,10,46,6,31,30,20,86,26,73,37,39,31,10,24,76,40,10,15,76,83,34,22,66,10,6,38,51,15,43,6,36,49,15,43,6,35,30,34,18,29,85,6,47,43,25,34,18,27,80,20,10,53,78,69,66,23,29,31,22,11,74,34,26,21,63,10,54,76,26,14,21,54,35,66,19,94,14,10,16,6,46,62,23,29,31,22,11,74,34,26,21,63,10,73,21,69,10,16,6,39,30,34,18,29,89,6,51,43,25,34,18,27,84,20,10,53,78,69,66,23,29,31,22,11,74,34,26,48,10,54,76,26,14,21,46,60,10,16,6,50,62,23,29,31,22,11,74,34,26,48,10,73,21,73,10,16,6,2,29,36,13,40,37,34,6,19,29,6,19,34,38,37,37,10,42,58,44,45,18,23,39,18,16,12,29,6,17,34,38,37,35,10,69,58,38,42,12,29,6,2,33,36,13,40,37,49,33,30,12,55,56,6,19,31,35,26,6,15,34,34,40,78,16,10,15,74,10,29,6,19,37,35,10,77,29,6,2,33,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      (!this.opts.nodir ||\n        !this.opts.follow ||\n        !e.isSymbolicLink() ||\n        !e.realpathCached()?.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/ignore.js":{"lineLengths":[14,55,35,67,46,63,25,42,46,55,15,41,23,15,4,42,4,15,14,22,14,22,96,28,28,36,36,25,23,21,20,19,24,34,22,29,28,11,76,73,76,48,76,78,32,80,77,30,79,49,37,63,54,42,51,38,45,63,18,49,66,68,36,39,18,37,84,77,75,49,30,43,21,43,32,34,55,25,55,18,14,10,6,17,39,42,46,42,41,57,29,10,41,57,29,10,22,6,25,45,54,49,35,29,10,49,35,29,10,22,6,2,25,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/ignore.ts"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,kCAAkC;AAClC,kEAAkE;AAClE,6CAA6C;;;AAE7C,yCAAqC;AAErC,6CAAsC;AAQtC,MAAM,eAAe,GACnB,OAAO,OAAO,KAAK,QAAQ;IAC3B,OAAO;IACP,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ;IAClC,CAAC,CAAC,OAAO,CAAC,QAAQ;IAClB,CAAC,CAAC,OAAO,CAAA;AAEb;;GAEG;AACH,MAAa,MAAM;IACjB,QAAQ,CAAa;IACrB,gBAAgB,CAAa;IAC7B,QAAQ,CAAa;IACrB,gBAAgB,CAAa;IAE7B,YACE,OAAiB,EACjB,EACE,OAAO,EACP,MAAM,EACN,KAAK,EACL,UAAU,EACV,QAAQ,GAAG,eAAe,GACX;QAEjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAA;QAC1B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAA;QAC1B,MAAM,MAAM,GAAG;YACb,GAAG,EAAE,IAAI;YACT,OAAO;YACP,MAAM;YACN,KAAK;YACL,UAAU;YACV,iBAAiB,EAAE,CAAC;YACpB,QAAQ;YACR,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;SACf,CAAA;QAED,mEAAmE;QACnE,gEAAgE;QAChE,mEAAmE;QACnE,uCAAuC;QACvC,mEAAmE;QACnE,qEAAqE;QACrE,uBAAuB;QACvB,uEAAuE;QACvE,oEAAoE;QACpE,qBAAqB;QACrB,sEAAsE;QACtE,wCAAwC;QACxC,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;YACzB,MAAM,EAAE,GAAG,IAAI,qBAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;gBACxB,MAAM,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;gBACjC,qBAAqB;gBACrB,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE;oBACzB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;iBAC1C;gBACD,gCAAgC;gBAChC,iDAAiD;gBACjD,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oBAChD,MAAM,CAAC,KAAK,EAAE,CAAA;oBACd,SAAS,CAAC,KAAK,EAAE,CAAA;iBAClB;gBACD,oBAAoB;gBACpB,MAAM,CAAC,GAAG,IAAI,oBAAO,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAA;gBACrD,MAAM,CAAC,GAAG,IAAI,qBAAS,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,CAAA;gBAC/C,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAA;gBACzD,MAAM,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,CAAA;gBAC/B,IAAI,QAAQ;oBAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;oBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;gBAC1B,IAAI,QAAQ,EAAE;oBACZ,IAAI,QAAQ;wBAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;wBACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;iBACnC;aACF;SACF;IACH,CAAC;IAED,OAAO,CAAC,CAAO;QACb,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC7B,MAAM,SAAS,GAAG,GAAG,QAAQ,GAAG,CAAA;QAChC,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAA;QACpC,MAAM,SAAS,GAAG,GAAG,QAAQ,GAAG,CAAA;QAChC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;gBAAE,OAAO,IAAI,CAAA;SACzD;QACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;gBAAE,OAAO,IAAI,CAAA;SACzD;QACD,OAAO,KAAK,CAAA;IACd,CAAC;IAED,eAAe,CAAC,CAAO;QACrB,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAA;QACnC,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,GAAG,GAAG,CAAA;QAC5C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACrC,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAA;SACnC;QACD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACrC,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAA;SACnC;QACD,OAAO,KAAK,CAAA;IACd,CAAC;CACF;AAnGD,wBAmGC","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        /* c8 ignore start */\n        if (!parsed || !globParts) {\n          throw new Error('invalid pattern object')\n        }\n        // strip off leading ./ portions\n        // https://github.com/isaacs/node-glob/issues/570\n        while (parsed[0] === '.' && globParts[0] === '.') {\n          parsed.shift()\n          globParts.shift()\n        }\n        /* c8 ignore stop */\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/processor.js":{"lineLengths":[14,70,63,94,42,4,66,4,23,11,37,28,6,13,56,6,33,77,6,35,44,49,20,46,13,71,6,2,41,4,67,73,67,4,20,23,35,56,48,73,6,30,16,62,18,23,23,12,6,2,35,4,72,21,4,17,23,27,36,20,10,45,20,76,36,14,10,13,47,6,18,45,30,21,64,10,29,21,6,16,61,6,13,67,6,2,29,4,55,3,67,36,4,18,20,33,31,14,12,9,10,40,26,37,31,45,36,36,6,40,34,62,73,48,50,57,41,83,47,24,75,37,29,45,29,54,30,18,23,36,18,14,30,26,19,22,33,66,43,40,23,32,32,14,35,35,27,63,30,61,14,68,50,63,41,68,44,67,65,26,14,51,57,61,73,77,81,43,35,53,51,18,44,44,70,70,66,76,18,23,39,81,81,46,50,45,36,66,78,58,26,22,18,14,44,47,14,10,21,6,23,37,6,14,62,6,63,46,50,32,37,52,66,38,35,46,55,45,45,50,70,18,48,62,18,23,62,18,14,10,24,6,47,51,38,54,14,34,76,81,80,82,72,58,51,18,47,65,52,22,61,55,22,18,14,10,63,21,20,39,42,55,31,29,30,63,14,36,38,42,37,45,14,45,63,14,10,6,39,29,20,21,50,10,15,40,10,6,39,32,27,20,21,50,10,15,40,10,6,2,31,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/processor.ts"],"names":[],"mappings":";AAAA,qEAAqE;;;AAErE,yCAA8C;AAK9C;;GAEG;AACH,MAAa,cAAc;IACzB,KAAK,CAA0B;IAC/B,YAAY,QAAkC,IAAI,GAAG,EAAE;QACrD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;IACD,IAAI;QACF,OAAO,IAAI,cAAc,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;IAChD,CAAC;IACD,SAAS,CAAC,MAAY,EAAE,OAAgB;QACtC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAA;IACrE,CAAC;IACD,WAAW,CAAC,MAAY,EAAE,OAAgB;QACxC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAA;QAClC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACvC,IAAI,MAAM;YAAE,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAA;;YACvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAA;IAChE,CAAC;CACF;AAjBD,wCAiBC;AAED;;;;GAIG;AACH,MAAa,WAAW;IACtB,KAAK,GAAsB,IAAI,GAAG,EAAE,CAAA;IACpC,GAAG,CAAC,MAAY,EAAE,QAAiB,EAAE,KAAc;QACjD,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAA;IACjE,CAAC;IACD,yBAAyB;IACzB,OAAO;QACL,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;YAClD,IAAI;YACJ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACV,CAAC,CAAA;IACJ,CAAC;CACF;AAfD,kCAeC;AAED;;;GAGG;AACH,MAAa,QAAQ;IACnB,KAAK,GAAyB,IAAI,GAAG,EAAE,CAAA;IACvC,GAAG,CAAC,MAAY,EAAE,OAAgB;QAChC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE;YACxB,OAAM;SACP;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,OAAO,CAAC,UAAU,EAAE,CAAC,EAAE;gBAC5D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aACnB;SACF;;YAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,CAAA;IAC1C,CAAC;IACD,GAAG,CAAC,MAAY;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnC,qBAAqB;QACrB,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;SACnD;QACD,oBAAoB;QACpB,OAAO,IAAI,CAAA;IACb,CAAC;IACD,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAc,CAAC,CAAC,CAAA;IAClE,CAAC;IACD,IAAI;QACF,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAA;IAC3D,CAAC;CACF;AA5BD,4BA4BC;AAED;;;;;GAKG;AACH,MAAa,SAAS;IACpB,cAAc,CAAgB;IAC9B,OAAO,GAAG,IAAI,WAAW,EAAE,CAAA;IAC3B,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAA;IACzB,QAAQ,CAAY;IACpB,MAAM,CAAS;IACf,GAAG,CAAS;IACZ,IAAI,CAAgB;IAEpB,YAAY,IAAoB,EAAE,cAA+B;QAC/D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAA;QAC3B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAA;QACrB,IAAI,CAAC,cAAc,GAAG,cAAc;YAClC,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE;YACvB,CAAC,CAAC,IAAI,cAAc,EAAE,CAAA;IAC1B,CAAC;IAED,eAAe,CAAC,MAAY,EAAE,QAAmB;QAC/C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,MAAM,aAAa,GAAsB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;QAEvE,gEAAgE;QAChE,uCAAuC;QAEvC,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,aAAa,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;YAE3C,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAA;YAC3B,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAA;YAErE,kCAAkC;YAClC,IAAI,IAAI,EAAE;gBACR,CAAC,GAAG,CAAC,CAAC,OAAO,CACX,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS;oBAC1C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;oBAChB,CAAC,CAAC,IAAI,CACT,CAAA;gBACD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAA;gBAC3B,IAAI,CAAC,IAAI,EAAE;oBACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;oBAChC,SAAQ;iBACT;qBAAM;oBACL,OAAO,GAAG,IAAI,CAAA;iBACf;aACF;YAED,IAAI,CAAC,CAAC,QAAQ,EAAE;gBAAE,SAAQ;YAE1B,IAAI,CAAY,CAAA;YAChB,IAAI,IAAoB,CAAA;YACxB,IAAI,OAAO,GAAG,KAAK,CAAA;YACnB,OACE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,QAAQ;gBAC3C,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EACvB;gBACA,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;gBACtB,CAAC,GAAG,CAAC,CAAA;gBACL,OAAO,GAAG,IAAI,CAAA;gBACd,OAAO,GAAG,IAAI,CAAA;aACf;YACD,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAA;YACrB,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAA;YACrB,IAAI,OAAO,EAAE;gBACX,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC;oBAAE,SAAQ;gBACvD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;aAC5C;YAED,uDAAuD;YACvD,qCAAqC;YACrC,kDAAkD;YAClD,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACzB,mDAAmD;gBACnD,2BAA2B;gBAC3B,MAAM,KAAK,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAA;gBACjD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;gBAC/C,SAAQ;aACT;iBAAM,IAAI,CAAC,KAAK,oBAAQ,EAAE;gBACzB,wCAAwC;gBACxC,4CAA4C;gBAC5C,wDAAwD;gBACxD,4DAA4D;gBAC5D,gEAAgE;gBAChE,IACE,CAAC,CAAC,CAAC,cAAc,EAAE;oBACnB,IAAI,CAAC,MAAM;oBACX,OAAO,CAAC,mBAAmB,EAAE,EAC7B;oBACA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;iBAC9B;gBACD,MAAM,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,CAAA;gBAC1B,MAAM,KAAK,GAAG,IAAI,EAAE,IAAI,EAAE,CAAA;gBAC1B,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBAClD,iDAAiD;oBACjD,6CAA6C;oBAC7C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,CAAA;iBACvD;qBAAM;oBACL,IAAI,EAAE,KAAK,IAAI,EAAE;wBACf,wDAAwD;wBACxD,wDAAwD;wBACxD,qBAAqB;wBACrB,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAA;wBACxB,oBAAoB;wBACpB,IAAI,CAAC,KAAK;4BAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;6BAC3C,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;4BAClD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;yBAC7B;qBACF;iBACF;aACF;iBAAM,IAAI,CAAC,YAAY,MAAM,EAAE;gBAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;aAC9B;SACF;QAED,OAAO,IAAI,CAAA;IACb,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;IAC7B,CAAC;IAED,KAAK;QACH,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAA;IACtD,CAAC;IAED,0DAA0D;IAC1D,yCAAyC;IACzC,6CAA6C;IAC7C,2BAA2B;IAC3B,aAAa,CAAC,MAAY,EAAE,OAAe;QACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QAC1C,yDAAyD;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,CAAA;QAC5B,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;YACvB,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC9B,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,EAAE,CAAA;gBACrC,MAAM,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAA;gBAC3B,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAA;gBAC3B,IAAI,CAAC,KAAK,oBAAQ,EAAE;oBAClB,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;iBACjD;qBAAM,IAAI,CAAC,YAAY,MAAM,EAAE;oBAC9B,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;iBACzC;qBAAM;oBACL,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;iBACzC;aACF;SACF;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAED,YAAY,CACV,CAAO,EACP,OAAgB,EAChB,IAAoB,EACpB,QAAiB;QAEjB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;aACrC;YACD,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;gBAClB,2DAA2D;gBAC3D,gEAAgE;gBAChE,+DAA+D;gBAC/D,iEAAiE;gBACjE,uDAAuD;gBACvD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,cAAc,EAAE,EAAE;oBACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;iBAC9B;qBAAM,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE;oBAC7B,IAAI,IAAI,IAAI,OAAO,CAAC,mBAAmB,EAAE,EAAE;wBACzC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;qBAC3B;yBAAM,IAAI,OAAO,CAAC,kBAAkB,EAAE,EAAE;wBACvC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;qBAC9B;iBACF;aACF;SACF;QACD,sDAAsD;QACtD,YAAY;QACZ,IAAI,IAAI,EAAE;YACR,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;YACzB,IACE,OAAO,EAAE,KAAK,QAAQ;gBACtB,sCAAsC;gBACtC,EAAE,KAAK,IAAI;gBACX,EAAE,KAAK,EAAE;gBACT,EAAE,KAAK,GAAG,EACV;gBACA,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAA;aAC9C;iBAAM,IAAI,EAAE,KAAK,IAAI,EAAE;gBACtB,qBAAqB;gBACrB,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAA;gBACxB,oBAAoB;gBACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;aAC5B;iBAAM,IAAI,EAAE,YAAY,MAAM,EAAE;gBAC/B,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAA;aAC9C;SACF;IACH,CAAC;IAED,UAAU,CACR,CAAO,EACP,CAAW,EACX,IAAoB,EACpB,QAAiB;QAEjB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YAAE,OAAM;QAC3B,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;SACrC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;SAC3B;IACH,CAAC;IAED,UAAU,CAAC,CAAO,EAAE,CAAS,EAAE,IAAoB,EAAE,QAAiB;QACpE,uBAAuB;QACvB,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAE,OAAM;QACzB,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;SACrC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;SAC3B;IACH,CAAC;CACF;AA/ND,8BA+NC","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/dist/commonjs/has-magic.js":{"lineLengths":[14,63,27,42,4,75,31,3,79,78,75,79,79,78,4,46,35,29,6,31,62,25,6,18,3,29,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///C:/Program%20Files/nodejs/node_modules/npm/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;KACpB;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;QACvB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;KACtD;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null,"sourceURL":null}}}